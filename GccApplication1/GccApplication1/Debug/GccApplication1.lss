
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000ea6  00000f3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ea6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000060  00800120  00800120  00000f5a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001559  00000000  00000000  0000109c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b77  00000000  00000000  000025f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000914  00000000  00000000  0000316c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000033c  00000000  00000000  00003a80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000779  00000000  00000000  00003dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dc2  00000000  00000000  00004535  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000052f7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	5c c0       	rjmp	.+184    	; 0xba <__ctors_end>
   2:	00 00       	nop
   4:	77 c0       	rjmp	.+238    	; 0xf4 <__bad_interrupt>
   6:	00 00       	nop
   8:	75 c0       	rjmp	.+234    	; 0xf4 <__bad_interrupt>
   a:	00 00       	nop
   c:	73 c0       	rjmp	.+230    	; 0xf4 <__bad_interrupt>
   e:	00 00       	nop
  10:	71 c0       	rjmp	.+226    	; 0xf4 <__bad_interrupt>
  12:	00 00       	nop
  14:	5b c1       	rjmp	.+694    	; 0x2cc <__vector_5>
  16:	00 00       	nop
  18:	6d c0       	rjmp	.+218    	; 0xf4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6b c0       	rjmp	.+214    	; 0xf4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	69 c0       	rjmp	.+210    	; 0xf4 <__bad_interrupt>
  22:	00 00       	nop
  24:	67 c0       	rjmp	.+206    	; 0xf4 <__bad_interrupt>
  26:	00 00       	nop
  28:	65 c0       	rjmp	.+202    	; 0xf4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	63 c0       	rjmp	.+198    	; 0xf4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	ba c1       	rjmp	.+884    	; 0x3a6 <__vector_12>
  32:	00 00       	nop
  34:	5f c0       	rjmp	.+190    	; 0xf4 <__bad_interrupt>
  36:	00 00       	nop
  38:	5d c0       	rjmp	.+186    	; 0xf4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5b c0       	rjmp	.+182    	; 0xf4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	59 c0       	rjmp	.+178    	; 0xf4 <__bad_interrupt>
  42:	00 00       	nop
  44:	57 c0       	rjmp	.+174    	; 0xf4 <__bad_interrupt>
  46:	00 00       	nop
  48:	7f c1       	rjmp	.+766    	; 0x348 <__vector_18>
  4a:	00 00       	nop
  4c:	53 c0       	rjmp	.+166    	; 0xf4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	51 c0       	rjmp	.+162    	; 0xf4 <__bad_interrupt>
  52:	00 00       	nop
  54:	4f c0       	rjmp	.+158    	; 0xf4 <__bad_interrupt>
  56:	00 00       	nop
  58:	4d c0       	rjmp	.+154    	; 0xf4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4b c0       	rjmp	.+150    	; 0xf4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	49 c0       	rjmp	.+146    	; 0xf4 <__bad_interrupt>
  62:	00 00       	nop
  64:	47 c0       	rjmp	.+142    	; 0xf4 <__bad_interrupt>
  66:	00 00       	nop
  68:	45 c0       	rjmp	.+138    	; 0xf4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	43 c0       	rjmp	.+134    	; 0xf4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	41 c0       	rjmp	.+130    	; 0xf4 <__bad_interrupt>
  72:	00 00       	nop
  74:	3f c0       	rjmp	.+126    	; 0xf4 <__bad_interrupt>
  76:	00 00       	nop
  78:	3d c0       	rjmp	.+122    	; 0xf4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3b c0       	rjmp	.+118    	; 0xf4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	39 c0       	rjmp	.+114    	; 0xf4 <__bad_interrupt>
  82:	00 00       	nop
  84:	37 c0       	rjmp	.+110    	; 0xf4 <__bad_interrupt>
  86:	00 00       	nop
  88:	35 c0       	rjmp	.+106    	; 0xf4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	08 4a       	sbci	r16, 0xA8	; 168
  8e:	d7 3b       	cpi	r29, 0xB7	; 183
  90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
  92:	01 6e       	ori	r16, 0xE1	; 225
  94:	84 bc       	out	0x24, r8	; 36
  96:	bf fd       	.word	0xfdbf	; ????
  98:	c1 2f       	mov	r28, r17
  9a:	3d 6c       	ori	r19, 0xCD	; 205
  9c:	74 31       	cpi	r23, 0x14	; 20
  9e:	9a bd       	out	0x2a, r25	; 42
  a0:	56 83       	std	Z+6, r21	; 0x06
  a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
  a4:	3d 00       	.word	0x003d	; ????
  a6:	c7 7f       	andi	r28, 0xF7	; 247
  a8:	11 be       	out	0x31, r1	; 49
  aa:	d9 e4       	ldi	r29, 0x49	; 73
  ac:	bb 4c       	sbci	r27, 0xCB	; 203
  ae:	3e 91       	ld	r19, -X
  b0:	6b aa       	std	Y+51, r6	; 0x33
  b2:	aa be       	out	0x3a, r10	; 58
  b4:	00 00       	nop
  b6:	00 80       	ld	r0, Z
  b8:	3f 00       	.word	0x003f	; ????

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d0 e1       	ldi	r29, 0x10	; 16
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	11 e0       	ldi	r17, 0x01	; 1
  c8:	a0 e0       	ldi	r26, 0x00	; 0
  ca:	b1 e0       	ldi	r27, 0x01	; 1
  cc:	e6 ea       	ldi	r30, 0xA6	; 166
  ce:	fe e0       	ldi	r31, 0x0E	; 14
  d0:	00 e0       	ldi	r16, 0x00	; 0
  d2:	0b bf       	out	0x3b, r16	; 59
  d4:	02 c0       	rjmp	.+4      	; 0xda <__do_copy_data+0x14>
  d6:	07 90       	elpm	r0, Z+
  d8:	0d 92       	st	X+, r0
  da:	a0 32       	cpi	r26, 0x20	; 32
  dc:	b1 07       	cpc	r27, r17
  de:	d9 f7       	brne	.-10     	; 0xd6 <__do_copy_data+0x10>

000000e0 <__do_clear_bss>:
  e0:	21 e0       	ldi	r18, 0x01	; 1
  e2:	a0 e2       	ldi	r26, 0x20	; 32
  e4:	b1 e0       	ldi	r27, 0x01	; 1
  e6:	01 c0       	rjmp	.+2      	; 0xea <.do_clear_bss_start>

000000e8 <.do_clear_bss_loop>:
  e8:	1d 92       	st	X+, r1

000000ea <.do_clear_bss_start>:
  ea:	a0 38       	cpi	r26, 0x80	; 128
  ec:	b2 07       	cpc	r27, r18
  ee:	e1 f7       	brne	.-8      	; 0xe8 <.do_clear_bss_loop>
  f0:	8f d3       	rcall	.+1822   	; 0x810 <main>
  f2:	d7 c6       	rjmp	.+3502   	; 0xea2 <_exit>

000000f4 <__bad_interrupt>:
  f4:	85 cf       	rjmp	.-246    	; 0x0 <__vectors>

000000f6 <_Z8i2c_initv>:
	}

	i2c_stop();

	return 0;
}
  f6:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  fa:	08 95       	ret

000000fc <_Z9i2c_starth>:
  fc:	e4 e7       	ldi	r30, 0x74	; 116
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	10 82       	st	Z, r1
 102:	94 ea       	ldi	r25, 0xA4	; 164
 104:	90 83       	st	Z, r25
 106:	90 81       	ld	r25, Z
 108:	99 23       	and	r25, r25
 10a:	ec f7       	brge	.-6      	; 0x106 <_Z9i2c_starth+0xa>
 10c:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 110:	98 7f       	andi	r25, 0xF8	; 248
 112:	98 30       	cpi	r25, 0x08	; 8
 114:	a1 f4       	brne	.+40     	; 0x13e <_Z9i2c_starth+0x42>
 116:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 11a:	84 e8       	ldi	r24, 0x84	; 132
 11c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 120:	e4 e7       	ldi	r30, 0x74	; 116
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	88 23       	and	r24, r24
 128:	ec f7       	brge	.-6      	; 0x124 <_Z9i2c_starth+0x28>
 12a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 12e:	98 7f       	andi	r25, 0xF8	; 248
 130:	98 31       	cpi	r25, 0x18	; 24
 132:	39 f0       	breq	.+14     	; 0x142 <_Z9i2c_starth+0x46>
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 34       	cpi	r25, 0x40	; 64
 138:	29 f4       	brne	.+10     	; 0x144 <_Z9i2c_starth+0x48>
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	08 95       	ret
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	08 95       	ret
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	08 95       	ret

00000146 <_Z9i2c_writeh>:
 146:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 14a:	84 e8       	ldi	r24, 0x84	; 132
 14c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 150:	e4 e7       	ldi	r30, 0x74	; 116
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	88 23       	and	r24, r24
 158:	ec f7       	brge	.-6      	; 0x154 <_Z9i2c_writeh+0xe>
 15a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 15e:	98 7f       	andi	r25, 0xF8	; 248
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	98 32       	cpi	r25, 0x28	; 40
 164:	09 f4       	brne	.+2      	; 0x168 <_Z9i2c_writeh+0x22>
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	08 95       	ret

0000016a <_Z12i2c_read_ackv>:
 16a:	84 ec       	ldi	r24, 0xC4	; 196
 16c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 170:	e4 e7       	ldi	r30, 0x74	; 116
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	88 23       	and	r24, r24
 178:	ec f7       	brge	.-6      	; 0x174 <_Z12i2c_read_ackv+0xa>
 17a:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 17e:	08 95       	ret

00000180 <_Z13i2c_read_nackv>:
 180:	84 e8       	ldi	r24, 0x84	; 132
 182:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 186:	e4 e7       	ldi	r30, 0x74	; 116
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	88 23       	and	r24, r24
 18e:	ec f7       	brge	.-6      	; 0x18a <_Z13i2c_read_nackv+0xa>
 190:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 194:	08 95       	ret

00000196 <_Z11i2c_readReghhhPhj>:

uint8_t i2c_readReg(uint8_t devaddr_write,uint8_t devaddr_read, uint8_t regaddr, uint8_t* data, uint16_t length)
{
 196:	bf 92       	push	r11
 198:	cf 92       	push	r12
 19a:	df 92       	push	r13
 19c:	ef 92       	push	r14
 19e:	ff 92       	push	r15
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	c6 2f       	mov	r28, r22
 1aa:	d4 2f       	mov	r29, r20
 1ac:	69 01       	movw	r12, r18
	
	if (i2c_start(devaddr_write)) return 1;
 1ae:	a6 df       	rcall	.-180    	; 0xfc <_Z9i2c_starth>
 1b0:	81 11       	cpse	r24, r1
 1b2:	1c c0       	rjmp	.+56     	; 0x1ec <_Z11i2c_readReghhhPhj+0x56>
	i2c_write(regaddr);
 1b4:	8d 2f       	mov	r24, r29
 1b6:	c7 df       	rcall	.-114    	; 0x146 <_Z9i2c_writeh>
	if (i2c_start(devaddr_read)) return 1;
 1b8:	8c 2f       	mov	r24, r28
 1ba:	a0 df       	rcall	.-192    	; 0xfc <_Z9i2c_starth>
 1bc:	b8 2e       	mov	r11, r24
 1be:	81 11       	cpse	r24, r1
 1c0:	18 c0       	rjmp	.+48     	; 0x1f2 <_Z11i2c_readReghhhPhj+0x5c>
 1c2:	01 50       	subi	r16, 0x01	; 1
	for (uint16_t i = 0; i < (length-1); i++)
 1c4:	11 09       	sbc	r17, r1
 1c6:	49 f0       	breq	.+18     	; 0x1da <_Z11i2c_readReghhhPhj+0x44>
 1c8:	e6 01       	movw	r28, r12
 1ca:	76 01       	movw	r14, r12
 1cc:	e0 0e       	add	r14, r16
 1ce:	f1 1e       	adc	r15, r17
	{
		data[i] = i2c_read_ack();
 1d0:	cc df       	rcall	.-104    	; 0x16a <_Z12i2c_read_ackv>
 1d2:	89 93       	st	Y+, r24
 1d4:	ce 15       	cp	r28, r14
{
	
	if (i2c_start(devaddr_write)) return 1;
	i2c_write(regaddr);
	if (i2c_start(devaddr_read)) return 1;
	for (uint16_t i = 0; i < (length-1); i++)
 1d6:	df 05       	cpc	r29, r15
 1d8:	d9 f7       	brne	.-10     	; 0x1d0 <_Z11i2c_readReghhhPhj+0x3a>
	{
		data[i] = i2c_read_ack();
	}
	data[(length-1)] = i2c_read_nack();
 1da:	e6 01       	movw	r28, r12
 1dc:	c0 0f       	add	r28, r16
 1de:	d1 1f       	adc	r29, r17
 1e0:	cf df       	rcall	.-98     	; 0x180 <_Z13i2c_read_nackv>
 1e2:	88 83       	st	Y, r24
 1e4:	84 e9       	ldi	r24, 0x94	; 148
}

void i2c_stop(void)
{
	// transmit STOP condition
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 1e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 1ea:	05 c0       	rjmp	.+10     	; 0x1f6 <_Z11i2c_readReghhhPhj+0x60>
 1ec:	bb 24       	eor	r11, r11
}

uint8_t i2c_readReg(uint8_t devaddr_write,uint8_t devaddr_read, uint8_t regaddr, uint8_t* data, uint16_t length)
{
	
	if (i2c_start(devaddr_write)) return 1;
 1ee:	b3 94       	inc	r11
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <_Z11i2c_readReghhhPhj+0x60>
 1f2:	bb 24       	eor	r11, r11
	i2c_write(regaddr);
	if (i2c_start(devaddr_read)) return 1;
 1f4:	b3 94       	inc	r11
 1f6:	8b 2d       	mov	r24, r11
		data[i] = i2c_read_ack();
	}
	data[(length-1)] = i2c_read_nack();
	i2c_stop();
	return 0;
}
 1f8:	df 91       	pop	r29
 1fa:	cf 91       	pop	r28
 1fc:	1f 91       	pop	r17
 1fe:	0f 91       	pop	r16
 200:	ff 90       	pop	r15
 202:	ef 90       	pop	r14
 204:	df 90       	pop	r13
 206:	cf 90       	pop	r12
 208:	bf 90       	pop	r11
 20a:	08 95       	ret

0000020c <_Z8i2c_stopv>:
 20c:	84 e9       	ldi	r24, 0x94	; 148

void i2c_stop(void)
{
	// transmit STOP condition
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 20e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 212:	08 95       	ret

00000214 <_Z10serialSendPc>:
	UBRR0L = ((unsigned char)MYUBRR);
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
	UCSR0C = (3<<UCSZ00);
}

void serialSend(char* sendString){
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	dc 01       	movw	r26, r24
 21a:	ec 01       	movw	r28, r24
	for (int i = 0; i < strlen(sendString); i++){
 21c:	20 e0       	ldi	r18, 0x00	; 0
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	fd 01       	movw	r30, r26
 222:	01 90       	ld	r0, Z+
 224:	00 20       	and	r0, r0
 226:	e9 f7       	brne	.-6      	; 0x222 <_Z10serialSendPc+0xe>
 228:	31 97       	sbiw	r30, 0x01	; 1
 22a:	ea 1b       	sub	r30, r26
 22c:	fb 0b       	sbc	r31, r27
 22e:	2e 17       	cp	r18, r30
 230:	3f 07       	cpc	r19, r31
 232:	68 f4       	brcc	.+26     	; 0x24e <_Z10serialSendPc+0x3a>
		while (( UCSR0A & (1<<UDRE0))  == 0){};
 234:	5d 9b       	sbis	0x0b, 5	; 11
 236:	fe cf       	rjmp	.-4      	; 0x234 <_Z10serialSendPc+0x20>
		UDR0 = sendString[i];
 238:	89 91       	ld	r24, Y+
 23a:	8c b9       	out	0x0c, r24	; 12
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23c:	8f ec       	ldi	r24, 0xCF	; 207
 23e:	97 e0       	ldi	r25, 0x07	; 7
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <_Z10serialSendPc+0x2c>
 244:	00 c0       	rjmp	.+0      	; 0x246 <_Z10serialSendPc+0x32>
 246:	00 00       	nop
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
	UCSR0C = (3<<UCSZ00);
}

void serialSend(char* sendString){
	for (int i = 0; i < strlen(sendString); i++){
 248:	2f 5f       	subi	r18, 0xFF	; 255
 24a:	3f 4f       	sbci	r19, 0xFF	; 255
 24c:	e9 cf       	rjmp	.-46     	; 0x220 <_Z10serialSendPc+0xc>
		while (( UCSR0A & (1<<UDRE0))  == 0){};
		UDR0 = sendString[i];
		_delay_ms(1);
	}
}
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	08 95       	ret

00000254 <_Z15Process_UART_RXv>:
void Process_UART_RX(){
	if(bufferIndex > 0){
 254:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <bufferIndex>
 258:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <bufferIndex+0x1>
 25c:	18 16       	cp	r1, r24
 25e:	19 06       	cpc	r1, r25
 260:	a4 f5       	brge	.+104    	; 0x2ca <_Z15Process_UART_RXv+0x76>
		serialSend("Speed: ");
 262:	84 e0       	ldi	r24, 0x04	; 4
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	d6 df       	rcall	.-84     	; 0x214 <_Z10serialSendPc>
		serialSend(buffer);
 268:	8c e2       	ldi	r24, 0x2C	; 44
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	d3 df       	rcall	.-90     	; 0x214 <_Z10serialSendPc>
		int speed = 10;
		if(buffer[0]=='-')
 26e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <buffer>
 272:	8d 32       	cpi	r24, 0x2D	; 45
 274:	29 f4       	brne	.+10     	; 0x280 <_Z15Process_UART_RXv+0x2c>
		{
			PORTB &= 0b11001111;
 276:	88 b3       	in	r24, 0x18	; 24
 278:	8f 7c       	andi	r24, 0xCF	; 207
 27a:	88 bb       	out	0x18, r24	; 24
			PORTB |= 0b00100000;
 27c:	c5 9a       	sbi	0x18, 5	; 24
 27e:	0a c0       	rjmp	.+20     	; 0x294 <_Z15Process_UART_RXv+0x40>
		}
		else if(buffer[0]!='0')
 280:	80 33       	cpi	r24, 0x30	; 48
 282:	29 f0       	breq	.+10     	; 0x28e <_Z15Process_UART_RXv+0x3a>
		{
			PORTB &= 0b11001111;
 284:	88 b3       	in	r24, 0x18	; 24
 286:	8f 7c       	andi	r24, 0xCF	; 207
 288:	88 bb       	out	0x18, r24	; 24
			PORTB |= 0b00010000;
 28a:	c4 9a       	sbi	0x18, 4	; 24
 28c:	03 c0       	rjmp	.+6      	; 0x294 <_Z15Process_UART_RXv+0x40>
		}else
		{
			PORTB &= 0b11001111;
 28e:	88 b3       	in	r24, 0x18	; 24
 290:	8f 7c       	andi	r24, 0xCF	; 207
 292:	88 bb       	out	0x18, r24	; 24
		}
		buffer[0]=='0';
		requested_speed = abs(atoi(buffer));
 294:	8c e2       	ldi	r24, 0x2C	; 44
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	ac d5       	rcall	.+2904   	; 0xdf2 <atoi>
 29a:	99 23       	and	r25, r25
 29c:	1c f4       	brge	.+6      	; 0x2a4 <_Z15Process_UART_RXv+0x50>
 29e:	91 95       	neg	r25
 2a0:	81 95       	neg	r24
 2a2:	91 09       	sbc	r25, r1
 2a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2ac:	ec e2       	ldi	r30, 0x2C	; 44
 2ae:	f1 e0       	ldi	r31, 0x01	; 1
 2b0:	8c e6       	ldi	r24, 0x6C	; 108
 2b2:	91 e0       	ldi	r25, 0x01	; 1
		
		for(int i=0;i<64;i++)
		buffer[i] = 0;
 2b4:	11 92       	st	Z+, r1
			PORTB &= 0b11001111;
		}
		buffer[0]=='0';
		requested_speed = abs(atoi(buffer));
		
		for(int i=0;i<64;i++)
 2b6:	e8 17       	cp	r30, r24
 2b8:	f9 07       	cpc	r31, r25
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <_Z15Process_UART_RXv+0x60>
		buffer[i] = 0;
		
		bufferIndex = 0;
 2bc:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <bufferIndex+0x1>
 2c0:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <bufferIndex>
		serialSend("\n");
 2c4:	85 e1       	ldi	r24, 0x15	; 21
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	a5 cf       	rjmp	.-182    	; 0x214 <_Z10serialSendPc>
 2ca:	08 95       	ret

000002cc <__vector_5>:
	}
}


ISR(INT4_vect) {
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	2f 93       	push	r18
 2d8:	3f 93       	push	r19
 2da:	4f 93       	push	r20
 2dc:	5f 93       	push	r21
 2de:	6f 93       	push	r22
 2e0:	7f 93       	push	r23
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	af 93       	push	r26
	counter_1++;
 2e8:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <counter_1>
 2ec:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <counter_1+0x1>
 2f0:	40 91 6e 01 	lds	r20, 0x016E	; 0x80016e <counter_1+0x2>
 2f4:	50 91 6f 01 	lds	r21, 0x016F	; 0x80016f <counter_1+0x3>
 2f8:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <counter_1+0x4>
 2fc:	70 91 71 01 	lds	r23, 0x0171	; 0x800171 <counter_1+0x5>
 300:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <counter_1+0x6>
 304:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <counter_1+0x7>
 308:	a1 e0       	ldi	r26, 0x01	; 1
 30a:	5e d5       	rcall	.+2748   	; 0xdc8 <__adddi3_s8>
 30c:	20 93 6c 01 	sts	0x016C, r18	; 0x80016c <counter_1>
 310:	30 93 6d 01 	sts	0x016D, r19	; 0x80016d <counter_1+0x1>
 314:	40 93 6e 01 	sts	0x016E, r20	; 0x80016e <counter_1+0x2>
 318:	50 93 6f 01 	sts	0x016F, r21	; 0x80016f <counter_1+0x3>
 31c:	60 93 70 01 	sts	0x0170, r22	; 0x800170 <counter_1+0x4>
 320:	70 93 71 01 	sts	0x0171, r23	; 0x800171 <counter_1+0x5>
 324:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <counter_1+0x6>
 328:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <counter_1+0x7>
}
 32c:	af 91       	pop	r26
 32e:	9f 91       	pop	r25
 330:	8f 91       	pop	r24
 332:	7f 91       	pop	r23
 334:	6f 91       	pop	r22
 336:	5f 91       	pop	r21
 338:	4f 91       	pop	r20
 33a:	3f 91       	pop	r19
 33c:	2f 91       	pop	r18
 33e:	0f 90       	pop	r0
 340:	0f be       	out	0x3f, r0	; 63
 342:	0f 90       	pop	r0
 344:	1f 90       	pop	r1
 346:	18 95       	reti

00000348 <__vector_18>:
ISR(USART0_RX_vect){
 348:	1f 92       	push	r1
 34a:	0f 92       	push	r0
 34c:	0f b6       	in	r0, 0x3f	; 63
 34e:	0f 92       	push	r0
 350:	11 24       	eor	r1, r1
 352:	0b b6       	in	r0, 0x3b	; 59
 354:	0f 92       	push	r0
 356:	8f 93       	push	r24
 358:	9f 93       	push	r25
 35a:	ef 93       	push	r30
 35c:	ff 93       	push	r31
	char rcvChar = UDR0;
 35e:	8c b1       	in	r24, 0x0c	; 12
	if(rcvChar != '\n')
 360:	8a 30       	cpi	r24, 0x0A	; 10
 362:	81 f0       	breq	.+32     	; 0x384 <__vector_18+0x3c>
	{
		buffer[bufferIndex] = rcvChar;
 364:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <bufferIndex>
 368:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <bufferIndex+0x1>
 36c:	e4 5d       	subi	r30, 0xD4	; 212
 36e:	fe 4f       	sbci	r31, 0xFE	; 254
 370:	80 83       	st	Z, r24
		bufferIndex++;
 372:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <bufferIndex>
 376:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <bufferIndex+0x1>
 37a:	01 96       	adiw	r24, 0x01	; 1
 37c:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <bufferIndex+0x1>
 380:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <bufferIndex>
	}
	
}
 384:	ff 91       	pop	r31
 386:	ef 91       	pop	r30
 388:	9f 91       	pop	r25
 38a:	8f 91       	pop	r24
 38c:	0f 90       	pop	r0
 38e:	0b be       	out	0x3b, r0	; 59
 390:	0f 90       	pop	r0
 392:	0f be       	out	0x3f, r0	; 63
 394:	0f 90       	pop	r0
 396:	1f 90       	pop	r1
 398:	18 95       	reti

0000039a <_Z14initInterrupt4v>:

void initInterrupt4() {
	EIMSK = (1 << INT4); /* enable INT4 */
 39a:	80 e1       	ldi	r24, 0x10	; 16
 39c:	89 bf       	out	0x39, r24	; 57
	EICRB = 1; /* trigger when button changes */
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	8a bf       	out	0x3a, r24	; 58
	PORTE = 0b00000000;
 3a2:	13 b8       	out	0x03, r1	; 3
 3a4:	08 95       	ret

000003a6 <__vector_12>:
}

ISR(TIMER1_COMPA_vect) {
 3a6:	1f 92       	push	r1
 3a8:	0f 92       	push	r0
 3aa:	0f b6       	in	r0, 0x3f	; 63
 3ac:	0f 92       	push	r0
 3ae:	11 24       	eor	r1, r1
 3b0:	0b b6       	in	r0, 0x3b	; 59
 3b2:	0f 92       	push	r0
 3b4:	af 92       	push	r10
 3b6:	bf 92       	push	r11
 3b8:	cf 92       	push	r12
 3ba:	df 92       	push	r13
 3bc:	ef 92       	push	r14
 3be:	ff 92       	push	r15
 3c0:	0f 93       	push	r16
 3c2:	1f 93       	push	r17
 3c4:	2f 93       	push	r18
 3c6:	3f 93       	push	r19
 3c8:	4f 93       	push	r20
 3ca:	5f 93       	push	r21
 3cc:	6f 93       	push	r22
 3ce:	7f 93       	push	r23
 3d0:	8f 93       	push	r24
 3d2:	9f 93       	push	r25
 3d4:	af 93       	push	r26
 3d6:	bf 93       	push	r27
 3d8:	ef 93       	push	r30
 3da:	ff 93       	push	r31
	
	itoa(counter_1 ,strBuffer,10);
 3dc:	30 91 6c 01 	lds	r19, 0x016C	; 0x80016c <counter_1>
 3e0:	20 91 6d 01 	lds	r18, 0x016D	; 0x80016d <counter_1+0x1>
 3e4:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <counter_1+0x2>
 3e8:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <counter_1+0x3>
 3ec:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <counter_1+0x4>
 3f0:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <counter_1+0x5>
 3f4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <counter_1+0x6>
 3f8:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <counter_1+0x7>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 3fc:	4a e0       	ldi	r20, 0x0A	; 10
 3fe:	60 e2       	ldi	r22, 0x20	; 32
 400:	71 e0       	ldi	r23, 0x01	; 1
 402:	83 2f       	mov	r24, r19
 404:	92 2f       	mov	r25, r18
 406:	12 d5       	rcall	.+2596   	; 0xe2c <__itoa_ncheck>
	serialSend("S:");
 408:	8c e0       	ldi	r24, 0x0C	; 12
 40a:	91 e0       	ldi	r25, 0x01	; 1
 40c:	03 df       	rcall	.-506    	; 0x214 <_Z10serialSendPc>
	serialSend(strBuffer);
 40e:	80 e2       	ldi	r24, 0x20	; 32
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	00 df       	rcall	.-512    	; 0x214 <_Z10serialSendPc>
 414:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <heading>
 418:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <heading+0x1>
 41c:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <heading+0x2>
 420:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <heading+0x3>
 424:	5c d3       	rcall	.+1720   	; 0xade <__fixsfsi>
 426:	dc 01       	movw	r26, r24
 428:	cb 01       	movw	r24, r22
 42a:	4a e0       	ldi	r20, 0x0A	; 10
 42c:	60 e2       	ldi	r22, 0x20	; 32
 42e:	71 e0       	ldi	r23, 0x01	; 1
	itoa((int)heading,strBuffer,10);
	serialSend(" H:");
 430:	fd d4       	rcall	.+2554   	; 0xe2c <__itoa_ncheck>
 432:	8f e0       	ldi	r24, 0x0F	; 15
 434:	91 e0       	ldi	r25, 0x01	; 1
	serialSend(strBuffer);
 436:	ee de       	rcall	.-548    	; 0x214 <_Z10serialSendPc>
 438:	80 e2       	ldi	r24, 0x20	; 32
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	eb de       	rcall	.-554    	; 0x214 <_Z10serialSendPc>
	serialSend("\n");
 43e:	85 e1       	ldi	r24, 0x15	; 21
 440:	91 e0       	ldi	r25, 0x01	; 1
 442:	e8 de       	rcall	.-560    	; 0x214 <_Z10serialSendPc>
 444:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>

	if(counter_1<requested_speed-5)
 448:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 44c:	a0 90 6c 01 	lds	r10, 0x016C	; 0x80016c <counter_1>
 450:	b0 90 6d 01 	lds	r11, 0x016D	; 0x80016d <counter_1+0x1>
 454:	c0 90 6e 01 	lds	r12, 0x016E	; 0x80016e <counter_1+0x2>
 458:	d0 90 6f 01 	lds	r13, 0x016F	; 0x80016f <counter_1+0x3>
 45c:	e0 90 70 01 	lds	r14, 0x0170	; 0x800170 <counter_1+0x4>
 460:	f0 90 71 01 	lds	r15, 0x0171	; 0x800171 <counter_1+0x5>
 464:	00 91 72 01 	lds	r16, 0x0172	; 0x800172 <counter_1+0x6>
 468:	10 91 73 01 	lds	r17, 0x0173	; 0x800173 <counter_1+0x7>
 46c:	af 01       	movw	r20, r30
 46e:	45 50       	subi	r20, 0x05	; 5
 470:	51 09       	sbc	r21, r1
 472:	95 2f       	mov	r25, r21
 474:	99 0f       	add	r25, r25
 476:	99 0b       	sbc	r25, r25
 478:	24 2f       	mov	r18, r20
 47a:	35 2f       	mov	r19, r21
 47c:	49 2f       	mov	r20, r25
 47e:	59 2f       	mov	r21, r25
 480:	69 2f       	mov	r22, r25
 482:	79 2f       	mov	r23, r25
 484:	89 2f       	mov	r24, r25
 486:	ac d4       	rcall	.+2392   	; 0xde0 <__cmpdi2>
 488:	59 f0       	breq	.+22     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 48a:	50 f0       	brcs	.+20     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 48c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <speed>
	speed += 2;
 490:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <speed+0x1>
 494:	02 96       	adiw	r24, 0x02	; 2
 496:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <speed+0x1>
 49a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <speed>
 49e:	26 c0       	rjmp	.+76     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4a0:	a0 90 6c 01 	lds	r10, 0x016C	; 0x80016c <counter_1>
	else if(counter_1>requested_speed+5)
 4a4:	b0 90 6d 01 	lds	r11, 0x016D	; 0x80016d <counter_1+0x1>
 4a8:	c0 90 6e 01 	lds	r12, 0x016E	; 0x80016e <counter_1+0x2>
 4ac:	d0 90 6f 01 	lds	r13, 0x016F	; 0x80016f <counter_1+0x3>
 4b0:	e0 90 70 01 	lds	r14, 0x0170	; 0x800170 <counter_1+0x4>
 4b4:	f0 90 71 01 	lds	r15, 0x0171	; 0x800171 <counter_1+0x5>
 4b8:	00 91 72 01 	lds	r16, 0x0172	; 0x800172 <counter_1+0x6>
 4bc:	10 91 73 01 	lds	r17, 0x0173	; 0x800173 <counter_1+0x7>
 4c0:	35 96       	adiw	r30, 0x05	; 5
 4c2:	9f 2f       	mov	r25, r31
 4c4:	99 0f       	add	r25, r25
 4c6:	99 0b       	sbc	r25, r25
 4c8:	2e 2f       	mov	r18, r30
 4ca:	3f 2f       	mov	r19, r31
 4cc:	49 2f       	mov	r20, r25
 4ce:	59 2f       	mov	r21, r25
 4d0:	69 2f       	mov	r22, r25
 4d2:	79 2f       	mov	r23, r25
 4d4:	89 2f       	mov	r24, r25
 4d6:	84 d4       	rcall	.+2312   	; 0xde0 <__cmpdi2>
 4d8:	48 f4       	brcc	.+18     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4da:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <speed>
	speed -= 2;
 4de:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <speed+0x1>
 4e2:	02 97       	sbiw	r24, 0x02	; 2
 4e4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <speed+0x1>
 4e8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <speed>
 4ec:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <speed>
	
	//speed = speed > 255 ? 255 : speed <= 0 ? 0 : speed;

	
	OCR2 = abs(255 - speed);
 4f0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <speed+0x1>
 4f4:	8f ef       	ldi	r24, 0xFF	; 255
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	82 1b       	sub	r24, r18
 4fa:	93 0b       	sbc	r25, r19
 4fc:	9c 01       	movw	r18, r24
 4fe:	22 f4       	brpl	.+8      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 500:	22 27       	eor	r18, r18
 502:	33 27       	eor	r19, r19
 504:	28 1b       	sub	r18, r24
 506:	39 0b       	sbc	r19, r25
 508:	23 bd       	out	0x23, r18	; 35
 50a:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <counter_1>


	counter_1 = 0;
 50e:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <counter_1+0x1>
 512:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <counter_1+0x2>
 516:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <counter_1+0x3>
 51a:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <counter_1+0x4>
 51e:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <counter_1+0x5>
 522:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <counter_1+0x6>
 526:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <counter_1+0x7>
 52a:	ff 91       	pop	r31
}
 52c:	ef 91       	pop	r30
 52e:	bf 91       	pop	r27
 530:	af 91       	pop	r26
 532:	9f 91       	pop	r25
 534:	8f 91       	pop	r24
 536:	7f 91       	pop	r23
 538:	6f 91       	pop	r22
 53a:	5f 91       	pop	r21
 53c:	4f 91       	pop	r20
 53e:	3f 91       	pop	r19
 540:	2f 91       	pop	r18
 542:	1f 91       	pop	r17
 544:	0f 91       	pop	r16
 546:	ff 90       	pop	r15
 548:	ef 90       	pop	r14
 54a:	df 90       	pop	r13
 54c:	cf 90       	pop	r12
 54e:	bf 90       	pop	r11
 550:	af 90       	pop	r10
 552:	0f 90       	pop	r0
 554:	0b be       	out	0x3b, r0	; 59
 556:	0f 90       	pop	r0
 558:	0f be       	out	0x3f, r0	; 63
 55a:	0f 90       	pop	r0
 55c:	1f 90       	pop	r1
 55e:	18 95       	reti

00000560 <_Z7initPWMv>:
 560:	85 b5       	in	r24, 0x25	; 37
	//(1 << CS11) | (1<<CS10) 0.25 sec.
	TIMSK |= (1 << OCIE1A); /* enable output compare interrupt */
	OCR1A = 31250;
}
void initPWM(){
	TCCR2 |= (1<<WGM21) | (1<<WGM20) | (1<<WGM20) |(1<<COM21) |(1<<COM20) |(1<<CS21) | (1<<CS20);
 562:	8b 67       	ori	r24, 0x7B	; 123
 564:	85 bd       	out	0x25, r24	; 37
	OCR2 = 0xFF;
 566:	8f ef       	ldi	r24, 0xFF	; 255
 568:	83 bd       	out	0x23, r24	; 35
 56a:	08 95       	ret

0000056c <_Z20Start_Compass_Devicev>:
}

void Start_Compass_Device(){

	i2c_init();
 56c:	c4 dd       	rcall	.-1144   	; 0xf6 <_Z8i2c_initv>
	
	if(!i2c_start(COMPASS_ADDRESS_WRITE))
 56e:	8a e1       	ldi	r24, 0x1A	; 26
 570:	c5 dd       	rcall	.-1142   	; 0xfc <_Z9i2c_starth>
 572:	81 11       	cpse	r24, r1
 574:	05 c0       	rjmp	.+10     	; 0x580 <_Z20Start_Compass_Devicev+0x14>
	{
		
		i2c_write(0x0B);
 576:	8b e0       	ldi	r24, 0x0B	; 11
 578:	e6 dd       	rcall	.-1076   	; 0x146 <_Z9i2c_writeh>
		i2c_write(0x01);
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	e4 dd       	rcall	.-1080   	; 0x146 <_Z9i2c_writeh>
 57e:	46 de       	rcall	.-884    	; 0x20c <_Z8i2c_stopv>
		i2c_stop();
 580:	8f e1       	ldi	r24, 0x1F	; 31
 582:	9e e4       	ldi	r25, 0x4E	; 78
 584:	01 97       	sbiw	r24, 0x01	; 1
 586:	f1 f7       	brne	.-4      	; 0x584 <_Z20Start_Compass_Devicev+0x18>
 588:	00 c0       	rjmp	.+0      	; 0x58a <_Z20Start_Compass_Devicev+0x1e>
 58a:	00 00       	nop
 58c:	8a e1       	ldi	r24, 0x1A	; 26
	}


	_delay_ms(10);

	if(!i2c_start(COMPASS_ADDRESS_WRITE))
 58e:	b6 dd       	rcall	.-1172   	; 0xfc <_Z9i2c_starth>
 590:	81 11       	cpse	r24, r1
 592:	05 c0       	rjmp	.+10     	; 0x59e <_Z20Start_Compass_Devicev+0x32>
	{
		i2c_write(0x09);
 594:	89 e0       	ldi	r24, 0x09	; 9
 596:	d7 dd       	rcall	.-1106   	; 0x146 <_Z9i2c_writeh>
 598:	8d e1       	ldi	r24, 0x1D	; 29
		i2c_write(0x1D);
 59a:	d5 dd       	rcall	.-1110   	; 0x146 <_Z9i2c_writeh>
 59c:	37 ce       	rjmp	.-914    	; 0x20c <_Z8i2c_stopv>
 59e:	08 95       	ret

000005a0 <_Z12Read_Headingv>:
		i2c_stop();
 5a0:	4f 92       	push	r4
 5a2:	5f 92       	push	r5
 5a4:	6f 92       	push	r6
	}
	
}

void Read_Heading(){
 5a6:	7f 92       	push	r7
 5a8:	8f 92       	push	r8
 5aa:	9f 92       	push	r9
 5ac:	af 92       	push	r10
 5ae:	bf 92       	push	r11
 5b0:	cf 92       	push	r12
 5b2:	df 92       	push	r13
 5b4:	ef 92       	push	r14
 5b6:	ff 92       	push	r15
 5b8:	0f 93       	push	r16
 5ba:	1f 93       	push	r17
 5bc:	cf 93       	push	r28
 5be:	df 93       	push	r29
 5c0:	cd b7       	in	r28, 0x3d	; 61
 5c2:	de b7       	in	r29, 0x3e	; 62
 5c4:	29 97       	sbiw	r28, 0x09	; 9
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	f8 94       	cli
 5ca:	de bf       	out	0x3e, r29	; 62
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	cd bf       	out	0x3d, r28	; 61
 5d0:	fe 01       	movw	r30, r28
 5d2:	31 96       	adiw	r30, 0x01	; 1
 5d4:	ce 01       	movw	r24, r28
 5d6:	0a 96       	adiw	r24, 0x0a	; 10

	uint8_t data[9];
	for(int i =0 ;i<9;i++)
	data[i] = 0;
 5d8:	11 92       	st	Z+, r1
}

void Read_Heading(){

	uint8_t data[9];
	for(int i =0 ;i<9;i++)
 5da:	e8 17       	cp	r30, r24
 5dc:	f9 07       	cpc	r31, r25
 5de:	e1 f7       	brne	.-8      	; 0x5d8 <_Z12Read_Headingv+0x38>
	data[i] = 0;
	
	if(!i2c_readReg(COMPASS_ADDRESS_WRITE,COMPASS_ADDRESS_READ,6,data,1))
 5e0:	01 e0       	ldi	r16, 0x01	; 1
 5e2:	10 e0       	ldi	r17, 0x00	; 0
 5e4:	9e 01       	movw	r18, r28
 5e6:	2f 5f       	subi	r18, 0xFF	; 255
 5e8:	3f 4f       	sbci	r19, 0xFF	; 255
 5ea:	46 e0       	ldi	r20, 0x06	; 6
 5ec:	6b e1       	ldi	r22, 0x1B	; 27
 5ee:	8a e1       	ldi	r24, 0x1A	; 26
 5f0:	d2 dd       	rcall	.-1116   	; 0x196 <_Z11i2c_readReghhhPhj>
 5f2:	81 11       	cpse	r24, r1
 5f4:	e9 c0       	rjmp	.+466    	; 0x7c8 <_Z12Read_Headingv+0x228>
	{
		if((data[0] & 0x03) == 0x01){
 5f6:	89 81       	ldd	r24, Y+1	; 0x01
 5f8:	83 70       	andi	r24, 0x03	; 3
 5fa:	81 30       	cpi	r24, 0x01	; 1
 5fc:	09 f0       	breq	.+2      	; 0x600 <_Z12Read_Headingv+0x60>
 5fe:	d6 c0       	rjmp	.+428    	; 0x7ac <_Z12Read_Headingv+0x20c>
			if(!i2c_readReg(COMPASS_ADDRESS_WRITE,COMPASS_ADDRESS_READ,0,data,9))
 600:	09 e0       	ldi	r16, 0x09	; 9
 602:	10 e0       	ldi	r17, 0x00	; 0
 604:	9e 01       	movw	r18, r28
 606:	2f 5f       	subi	r18, 0xFF	; 255
 608:	3f 4f       	sbci	r19, 0xFF	; 255
 60a:	40 e0       	ldi	r20, 0x00	; 0
 60c:	6b e1       	ldi	r22, 0x1B	; 27
 60e:	8a e1       	ldi	r24, 0x1A	; 26
 610:	c2 dd       	rcall	.-1148   	; 0x196 <_Z11i2c_readReghhhPhj>
 612:	81 11       	cpse	r24, r1
 614:	bd c0       	rjmp	.+378    	; 0x790 <_Z12Read_Headingv+0x1f0>
			{
				
				int x = data[1] << 8 | data[0];
 616:	6a 81       	ldd	r22, Y+2	; 0x02
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	76 2f       	mov	r23, r22
 61c:	66 27       	eor	r22, r22
 61e:	89 81       	ldd	r24, Y+1	; 0x01
 620:	68 2b       	or	r22, r24
				int y = data[3] << 8 | data[2];
 622:	0c 81       	ldd	r16, Y+4	; 0x04
 624:	10 e0       	ldi	r17, 0x00	; 0
 626:	10 2f       	mov	r17, r16
 628:	00 27       	eor	r16, r16
 62a:	8b 81       	ldd	r24, Y+3	; 0x03
 62c:	08 2b       	or	r16, r24
				int z = data[5] << 8 | data[4];
				/*int temp = 0x7FFF & (data[8] << 8 | data[7]);*/
				
				if(x<xlow) xlow = x;
 62e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <xlow>
 632:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <xlow+0x1>
 636:	68 17       	cp	r22, r24
 638:	79 07       	cpc	r23, r25
 63a:	24 f4       	brge	.+8      	; 0x644 <_Z12Read_Headingv+0xa4>
 63c:	70 93 77 01 	sts	0x0177, r23	; 0x800177 <xlow+0x1>
 640:	60 93 76 01 	sts	0x0176, r22	; 0x800176 <xlow>
				if(x>xhigh) xhigh = x;
 644:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <xhigh>
 648:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <xhigh+0x1>
 64c:	86 17       	cp	r24, r22
 64e:	97 07       	cpc	r25, r23
 650:	24 f4       	brge	.+8      	; 0x65a <_Z12Read_Headingv+0xba>
 652:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <xhigh+0x1>
 656:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <xhigh>
				if(y<ylow) ylow = y;
 65a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <ylow>
 65e:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <ylow+0x1>
 662:	08 17       	cp	r16, r24
 664:	19 07       	cpc	r17, r25
 666:	24 f4       	brge	.+8      	; 0x670 <_Z12Read_Headingv+0xd0>
 668:	10 93 75 01 	sts	0x0175, r17	; 0x800175 <ylow+0x1>
 66c:	00 93 74 01 	sts	0x0174, r16	; 0x800174 <ylow>
				if(y>yhigh) yhigh = y;
 670:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <yhigh>
 674:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <yhigh+0x1>
 678:	80 17       	cp	r24, r16
 67a:	91 07       	cpc	r25, r17
 67c:	24 f4       	brge	.+8      	; 0x686 <_Z12Read_Headingv+0xe6>
 67e:	10 93 79 01 	sts	0x0179, r17	; 0x800179 <yhigh+0x1>
 682:	00 93 78 01 	sts	0x0178, r16	; 0x800178 <yhigh>

				/* Bail out if not enough data is available. */
				
				if( xlow==xhigh || ylow==yhigh ) return;
 686:	80 90 76 01 	lds	r8, 0x0176	; 0x800176 <xlow>
 68a:	90 90 77 01 	lds	r9, 0x0177	; 0x800177 <xlow+0x1>
 68e:	a0 90 7a 01 	lds	r10, 0x017A	; 0x80017a <xhigh>
 692:	b0 90 7b 01 	lds	r11, 0x017B	; 0x80017b <xhigh+0x1>
 696:	8a 14       	cp	r8, r10
 698:	9b 04       	cpc	r9, r11
 69a:	09 f4       	brne	.+2      	; 0x69e <_Z12Read_Headingv+0xfe>
 69c:	a2 c0       	rjmp	.+324    	; 0x7e2 <_Z12Read_Headingv+0x242>
 69e:	c0 90 74 01 	lds	r12, 0x0174	; 0x800174 <ylow>
 6a2:	d0 90 75 01 	lds	r13, 0x0175	; 0x800175 <ylow+0x1>
 6a6:	e0 90 78 01 	lds	r14, 0x0178	; 0x800178 <yhigh>
 6aa:	f0 90 79 01 	lds	r15, 0x0179	; 0x800179 <yhigh+0x1>
 6ae:	ce 14       	cp	r12, r14
 6b0:	df 04       	cpc	r13, r15
 6b2:	09 f4       	brne	.+2      	; 0x6b6 <_Z12Read_Headingv+0x116>
 6b4:	96 c0       	rjmp	.+300    	; 0x7e2 <_Z12Read_Headingv+0x242>
				/* Rescale the measurement to the range observed. */
				
				float fx = (float)x/(xhigh-xlow);
				float fy = (float)y/(yhigh-ylow);

				heading = 180.0*atan2(fy,fx)/M_PI;
 6b6:	c4 01       	movw	r24, r8
 6b8:	8a 0d       	add	r24, r10
 6ba:	9b 1d       	adc	r25, r11
 6bc:	99 23       	and	r25, r25
 6be:	0c f4       	brge	.+2      	; 0x6c2 <_Z12Read_Headingv+0x122>
 6c0:	01 96       	adiw	r24, 0x01	; 1
 6c2:	95 95       	asr	r25
 6c4:	87 95       	ror	r24
 6c6:	68 1b       	sub	r22, r24
 6c8:	79 0b       	sbc	r23, r25
 6ca:	07 2e       	mov	r0, r23
 6cc:	00 0c       	add	r0, r0
 6ce:	88 0b       	sbc	r24, r24
 6d0:	99 0b       	sbc	r25, r25
 6d2:	38 d2       	rcall	.+1136   	; 0xb44 <__floatsisf>
 6d4:	2b 01       	movw	r4, r22
 6d6:	3c 01       	movw	r6, r24
 6d8:	b5 01       	movw	r22, r10
 6da:	68 19       	sub	r22, r8
 6dc:	79 09       	sbc	r23, r9
 6de:	07 2e       	mov	r0, r23
 6e0:	00 0c       	add	r0, r0
 6e2:	88 0b       	sbc	r24, r24
 6e4:	99 0b       	sbc	r25, r25
 6e6:	2e d2       	rcall	.+1116   	; 0xb44 <__floatsisf>
 6e8:	9b 01       	movw	r18, r22
 6ea:	ac 01       	movw	r20, r24
 6ec:	c3 01       	movw	r24, r6
 6ee:	b2 01       	movw	r22, r4
 6f0:	8e d1       	rcall	.+796    	; 0xa0e <__divsf3>
 6f2:	2b 01       	movw	r4, r22
 6f4:	3c 01       	movw	r6, r24
 6f6:	c6 01       	movw	r24, r12
 6f8:	8e 0d       	add	r24, r14
 6fa:	9f 1d       	adc	r25, r15
 6fc:	99 23       	and	r25, r25
 6fe:	0c f4       	brge	.+2      	; 0x702 <_Z12Read_Headingv+0x162>
 700:	01 96       	adiw	r24, 0x01	; 1
 702:	95 95       	asr	r25
 704:	87 95       	ror	r24
 706:	b8 01       	movw	r22, r16
 708:	68 1b       	sub	r22, r24
 70a:	79 0b       	sbc	r23, r25
 70c:	07 2e       	mov	r0, r23
 70e:	00 0c       	add	r0, r0
 710:	88 0b       	sbc	r24, r24
 712:	99 0b       	sbc	r25, r25
 714:	17 d2       	rcall	.+1070   	; 0xb44 <__floatsisf>
 716:	4b 01       	movw	r8, r22
 718:	5c 01       	movw	r10, r24
 71a:	b7 01       	movw	r22, r14
 71c:	6c 19       	sub	r22, r12
 71e:	7d 09       	sbc	r23, r13
 720:	07 2e       	mov	r0, r23
 722:	00 0c       	add	r0, r0
 724:	88 0b       	sbc	r24, r24
 726:	99 0b       	sbc	r25, r25
 728:	0d d2       	rcall	.+1050   	; 0xb44 <__floatsisf>
 72a:	9b 01       	movw	r18, r22
 72c:	ac 01       	movw	r20, r24
 72e:	c5 01       	movw	r24, r10
 730:	b4 01       	movw	r22, r8
 732:	6d d1       	rcall	.+730    	; 0xa0e <__divsf3>
 734:	a3 01       	movw	r20, r6
 736:	92 01       	movw	r18, r4
 738:	13 d1       	rcall	.+550    	; 0x960 <atan2>
 73a:	20 e0       	ldi	r18, 0x00	; 0
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	44 e3       	ldi	r20, 0x34	; 52
 740:	53 e4       	ldi	r21, 0x43	; 67
 742:	dc d2       	rcall	.+1464   	; 0xcfc <__mulsf3>
 744:	2b ed       	ldi	r18, 0xDB	; 219
 746:	3f e0       	ldi	r19, 0x0F	; 15
 748:	49 e4       	ldi	r20, 0x49	; 73
 74a:	50 e4       	ldi	r21, 0x40	; 64
 74c:	60 d1       	rcall	.+704    	; 0xa0e <__divsf3>
 74e:	6b 01       	movw	r12, r22
 750:	7c 01       	movw	r14, r24
				if(heading<=0) heading += 360;
 752:	20 e0       	ldi	r18, 0x00	; 0
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	a9 01       	movw	r20, r18
 758:	56 d1       	rcall	.+684    	; 0xa06 <__cmpsf2>
 75a:	18 16       	cp	r1, r24
 75c:	4c f4       	brge	.+18     	; 0x770 <_Z12Read_Headingv+0x1d0>
 75e:	c0 92 7c 01 	sts	0x017C, r12	; 0x80017c <heading>
				/* Rescale the measurement to the range observed. */
				
				float fx = (float)x/(xhigh-xlow);
				float fy = (float)y/(yhigh-ylow);

				heading = 180.0*atan2(fy,fx)/M_PI;
 762:	d0 92 7d 01 	sts	0x017D, r13	; 0x80017d <heading+0x1>
 766:	e0 92 7e 01 	sts	0x017E, r14	; 0x80017e <heading+0x2>
 76a:	f0 92 7f 01 	sts	0x017F, r15	; 0x80017f <heading+0x3>
 76e:	39 c0       	rjmp	.+114    	; 0x7e2 <_Z12Read_Headingv+0x242>
				if(heading<=0) heading += 360;
 770:	20 e0       	ldi	r18, 0x00	; 0
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	44 eb       	ldi	r20, 0xB4	; 180
 776:	53 e4       	ldi	r21, 0x43	; 67
 778:	c7 01       	movw	r24, r14
 77a:	b6 01       	movw	r22, r12
 77c:	7e d0       	rcall	.+252    	; 0x87a <__addsf3>
 77e:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <heading>
 782:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <heading+0x1>
 786:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <heading+0x2>
 78a:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <heading+0x3>
 78e:	29 c0       	rjmp	.+82     	; 0x7e2 <_Z12Read_Headingv+0x242>
				
			}
			else
			{
				serialSend("e1\n");
 790:	83 e1       	ldi	r24, 0x13	; 19
 792:	91 e0       	ldi	r25, 0x01	; 1
 794:	3f dd       	rcall	.-1410   	; 0x214 <_Z10serialSendPc>
 796:	2f ef       	ldi	r18, 0xFF	; 255
 798:	81 ee       	ldi	r24, 0xE1	; 225
 79a:	94 e0       	ldi	r25, 0x04	; 4
 79c:	21 50       	subi	r18, 0x01	; 1
 79e:	80 40       	sbci	r24, 0x00	; 0
 7a0:	90 40       	sbci	r25, 0x00	; 0
 7a2:	e1 f7       	brne	.-8      	; 0x79c <_Z12Read_Headingv+0x1fc>
 7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <_Z12Read_Headingv+0x206>
 7a6:	00 00       	nop
				_delay_ms(200);
				Start_Compass_Device();
 7a8:	e1 de       	rcall	.-574    	; 0x56c <_Z20Start_Compass_Devicev>
 7aa:	1b c0       	rjmp	.+54     	; 0x7e2 <_Z12Read_Headingv+0x242>
			}
		}
		else
		{
			
			serialSend("e2\n");
 7ac:	87 e1       	ldi	r24, 0x17	; 23
 7ae:	91 e0       	ldi	r25, 0x01	; 1
 7b0:	31 dd       	rcall	.-1438   	; 0x214 <_Z10serialSendPc>
 7b2:	2f ef       	ldi	r18, 0xFF	; 255
 7b4:	81 ee       	ldi	r24, 0xE1	; 225
 7b6:	94 e0       	ldi	r25, 0x04	; 4
 7b8:	21 50       	subi	r18, 0x01	; 1
 7ba:	80 40       	sbci	r24, 0x00	; 0
 7bc:	90 40       	sbci	r25, 0x00	; 0
 7be:	e1 f7       	brne	.-8      	; 0x7b8 <_Z12Read_Headingv+0x218>
 7c0:	00 c0       	rjmp	.+0      	; 0x7c2 <_Z12Read_Headingv+0x222>
			_delay_ms(200);
			Start_Compass_Device();
 7c2:	00 00       	nop
 7c4:	d3 de       	rcall	.-602    	; 0x56c <_Z20Start_Compass_Devicev>
 7c6:	0d c0       	rjmp	.+26     	; 0x7e2 <_Z12Read_Headingv+0x242>
 7c8:	2f ef       	ldi	r18, 0xFF	; 255
 7ca:	81 ee       	ldi	r24, 0xE1	; 225
 7cc:	94 e0       	ldi	r25, 0x04	; 4
 7ce:	21 50       	subi	r18, 0x01	; 1
 7d0:	80 40       	sbci	r24, 0x00	; 0
 7d2:	90 40       	sbci	r25, 0x00	; 0
 7d4:	e1 f7       	brne	.-8      	; 0x7ce <_Z12Read_Headingv+0x22e>
 7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <_Z12Read_Headingv+0x238>
 7d8:	00 00       	nop
	}
	else
	{
		
		_delay_ms(200);
		serialSend("e3\n");
 7da:	8b e1       	ldi	r24, 0x1B	; 27
 7dc:	91 e0       	ldi	r25, 0x01	; 1
 7de:	1a dd       	rcall	.-1484   	; 0x214 <_Z10serialSendPc>
 7e0:	c5 de       	rcall	.-630    	; 0x56c <_Z20Start_Compass_Devicev>
		Start_Compass_Device();
 7e2:	29 96       	adiw	r28, 0x09	; 9
 7e4:	0f b6       	in	r0, 0x3f	; 63
	}
	
	
}
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	ff 90       	pop	r15
 7f8:	ef 90       	pop	r14
 7fa:	df 90       	pop	r13
 7fc:	cf 90       	pop	r12
 7fe:	bf 90       	pop	r11
 800:	af 90       	pop	r10
 802:	9f 90       	pop	r9
 804:	8f 90       	pop	r8
 806:	7f 90       	pop	r7
 808:	6f 90       	pop	r6
 80a:	5f 90       	pop	r5
 80c:	4f 90       	pop	r4
 80e:	08 95       	ret

00000810 <main>:
 810:	ec e2       	ldi	r30, 0x2C	; 44
 812:	f1 e0       	ldi	r31, 0x01	; 1




int main (void)
{
 814:	8c e6       	ldi	r24, 0x6C	; 108
 816:	91 e0       	ldi	r25, 0x01	; 1
	for(int i=0;i<64;i++)
	buffer[i] = 0;
 818:	11 92       	st	Z+, r1



int main (void)
{
	for(int i=0;i<64;i++)
 81a:	e8 17       	cp	r30, r24
 81c:	f9 07       	cpc	r31, r25
 81e:	e1 f7       	brne	.-8      	; 0x818 <main+0x8>
	buffer[i] = 0;
	
	DDRA = 0b00000011;
 820:	83 e0       	ldi	r24, 0x03	; 3
 822:	8a bb       	out	0x1a, r24	; 26

	DDRB = 0b10110000;
 824:	80 eb       	ldi	r24, 0xB0	; 176
 826:	87 bb       	out	0x17, r24	; 23
	PORTB = 0b10000000;
 828:	80 e8       	ldi	r24, 0x80	; 128
 82a:	88 bb       	out	0x18, r24	; 24
int speed = 10;
int requested_speed = 120;

inline void USART_Init()
{
	UBRR0H = ((unsigned char)(MYUBRR>>8));
 82c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = ((unsigned char)MYUBRR);
 830:	83 e3       	ldi	r24, 0x33	; 51
 832:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
 834:	88 e9       	ldi	r24, 0x98	; 152
 836:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (3<<UCSZ00);
 838:	86 e0       	ldi	r24, 0x06	; 6
 83a:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	DDRA = 0b00000011;

	DDRB = 0b10110000;
	PORTB = 0b10000000;
	USART_Init();
	initInterrupt4();
 83e:	ad dd       	rcall	.-1190   	; 0x39a <_Z14initInterrupt4v>

	counter_1 = 0;
}

static inline void initTimer1(void) {
	TCCR1B |= (1 << WGM12); /* CTC mode */
 840:	8e b5       	in	r24, 0x2e	; 46
 842:	88 60       	ori	r24, 0x08	; 8
 844:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << CS11) | (1<<CS10);//(1 << CS12);
 846:	8e b5       	in	r24, 0x2e	; 46
 848:	83 60       	ori	r24, 0x03	; 3
 84a:	8e bd       	out	0x2e, r24	; 46
	// (1 << CS12) ---> 1 second
	//(1 << CS11) | (1<<CS10) 0.25 sec.
	TIMSK |= (1 << OCIE1A); /* enable output compare interrupt */
 84c:	87 b7       	in	r24, 0x37	; 55
 84e:	80 61       	ori	r24, 0x10	; 16
 850:	87 bf       	out	0x37, r24	; 55
	OCR1A = 31250;
 852:	82 e1       	ldi	r24, 0x12	; 18
 854:	9a e7       	ldi	r25, 0x7A	; 122
 856:	9b bd       	out	0x2b, r25	; 43
	DDRB = 0b10110000;
	PORTB = 0b10000000;
	USART_Init();
	initInterrupt4();
	initTimer1();
	initPWM();
 858:	8a bd       	out	0x2a, r24	; 42
	sei();
	
	Start_Compass_Device();
 85a:	82 de       	rcall	.-764    	; 0x560 <_Z7initPWMv>
	
	
	for(;;){
		Process_UART_RX();
 85c:	78 94       	sei
 85e:	86 de       	rcall	.-756    	; 0x56c <_Z20Start_Compass_Devicev>
		Read_Heading();
 860:	f9 dc       	rcall	.-1550   	; 0x254 <_Z15Process_UART_RXv>
 862:	9e de       	rcall	.-708    	; 0x5a0 <_Z12Read_Headingv>
 864:	2f e7       	ldi	r18, 0x7F	; 127
 866:	88 e3       	ldi	r24, 0x38	; 56
 868:	91 e0       	ldi	r25, 0x01	; 1
 86a:	21 50       	subi	r18, 0x01	; 1
 86c:	80 40       	sbci	r24, 0x00	; 0
 86e:	90 40       	sbci	r25, 0x00	; 0
 870:	e1 f7       	brne	.-8      	; 0x86a <main+0x5a>
 872:	00 c0       	rjmp	.+0      	; 0x874 <main+0x64>
 874:	00 00       	nop
 876:	f4 cf       	rjmp	.-24     	; 0x860 <main+0x50>

00000878 <__subsf3>:
 878:	50 58       	subi	r21, 0x80	; 128

0000087a <__addsf3>:
 87a:	bb 27       	eor	r27, r27
 87c:	aa 27       	eor	r26, r26
 87e:	0e d0       	rcall	.+28     	; 0x89c <__addsf3x>
 880:	fc c1       	rjmp	.+1016   	; 0xc7a <__fp_round>
 882:	ed d1       	rcall	.+986    	; 0xc5e <__fp_pscA>
 884:	30 f0       	brcs	.+12     	; 0x892 <__addsf3+0x18>
 886:	f2 d1       	rcall	.+996    	; 0xc6c <__fp_pscB>
 888:	20 f0       	brcs	.+8      	; 0x892 <__addsf3+0x18>
 88a:	31 f4       	brne	.+12     	; 0x898 <__addsf3+0x1e>
 88c:	9f 3f       	cpi	r25, 0xFF	; 255
 88e:	11 f4       	brne	.+4      	; 0x894 <__addsf3+0x1a>
 890:	1e f4       	brtc	.+6      	; 0x898 <__addsf3+0x1e>
 892:	bd c1       	rjmp	.+890    	; 0xc0e <__fp_nan>
 894:	0e f4       	brtc	.+2      	; 0x898 <__addsf3+0x1e>
 896:	e0 95       	com	r30
 898:	e7 fb       	bst	r30, 7
 89a:	b3 c1       	rjmp	.+870    	; 0xc02 <__fp_inf>

0000089c <__addsf3x>:
 89c:	e9 2f       	mov	r30, r25
 89e:	fe d1       	rcall	.+1020   	; 0xc9c <__fp_split3>
 8a0:	80 f3       	brcs	.-32     	; 0x882 <__addsf3+0x8>
 8a2:	ba 17       	cp	r27, r26
 8a4:	62 07       	cpc	r22, r18
 8a6:	73 07       	cpc	r23, r19
 8a8:	84 07       	cpc	r24, r20
 8aa:	95 07       	cpc	r25, r21
 8ac:	18 f0       	brcs	.+6      	; 0x8b4 <__addsf3x+0x18>
 8ae:	71 f4       	brne	.+28     	; 0x8cc <__addsf3x+0x30>
 8b0:	9e f5       	brtc	.+102    	; 0x918 <__addsf3x+0x7c>
 8b2:	16 c2       	rjmp	.+1068   	; 0xce0 <__fp_zero>
 8b4:	0e f4       	brtc	.+2      	; 0x8b8 <__addsf3x+0x1c>
 8b6:	e0 95       	com	r30
 8b8:	0b 2e       	mov	r0, r27
 8ba:	ba 2f       	mov	r27, r26
 8bc:	a0 2d       	mov	r26, r0
 8be:	0b 01       	movw	r0, r22
 8c0:	b9 01       	movw	r22, r18
 8c2:	90 01       	movw	r18, r0
 8c4:	0c 01       	movw	r0, r24
 8c6:	ca 01       	movw	r24, r20
 8c8:	a0 01       	movw	r20, r0
 8ca:	11 24       	eor	r1, r1
 8cc:	ff 27       	eor	r31, r31
 8ce:	59 1b       	sub	r21, r25
 8d0:	99 f0       	breq	.+38     	; 0x8f8 <__addsf3x+0x5c>
 8d2:	59 3f       	cpi	r21, 0xF9	; 249
 8d4:	50 f4       	brcc	.+20     	; 0x8ea <__addsf3x+0x4e>
 8d6:	50 3e       	cpi	r21, 0xE0	; 224
 8d8:	68 f1       	brcs	.+90     	; 0x934 <__addsf3x+0x98>
 8da:	1a 16       	cp	r1, r26
 8dc:	f0 40       	sbci	r31, 0x00	; 0
 8de:	a2 2f       	mov	r26, r18
 8e0:	23 2f       	mov	r18, r19
 8e2:	34 2f       	mov	r19, r20
 8e4:	44 27       	eor	r20, r20
 8e6:	58 5f       	subi	r21, 0xF8	; 248
 8e8:	f3 cf       	rjmp	.-26     	; 0x8d0 <__addsf3x+0x34>
 8ea:	46 95       	lsr	r20
 8ec:	37 95       	ror	r19
 8ee:	27 95       	ror	r18
 8f0:	a7 95       	ror	r26
 8f2:	f0 40       	sbci	r31, 0x00	; 0
 8f4:	53 95       	inc	r21
 8f6:	c9 f7       	brne	.-14     	; 0x8ea <__addsf3x+0x4e>
 8f8:	7e f4       	brtc	.+30     	; 0x918 <__addsf3x+0x7c>
 8fa:	1f 16       	cp	r1, r31
 8fc:	ba 0b       	sbc	r27, r26
 8fe:	62 0b       	sbc	r22, r18
 900:	73 0b       	sbc	r23, r19
 902:	84 0b       	sbc	r24, r20
 904:	ba f0       	brmi	.+46     	; 0x934 <__addsf3x+0x98>
 906:	91 50       	subi	r25, 0x01	; 1
 908:	a1 f0       	breq	.+40     	; 0x932 <__addsf3x+0x96>
 90a:	ff 0f       	add	r31, r31
 90c:	bb 1f       	adc	r27, r27
 90e:	66 1f       	adc	r22, r22
 910:	77 1f       	adc	r23, r23
 912:	88 1f       	adc	r24, r24
 914:	c2 f7       	brpl	.-16     	; 0x906 <__addsf3x+0x6a>
 916:	0e c0       	rjmp	.+28     	; 0x934 <__addsf3x+0x98>
 918:	ba 0f       	add	r27, r26
 91a:	62 1f       	adc	r22, r18
 91c:	73 1f       	adc	r23, r19
 91e:	84 1f       	adc	r24, r20
 920:	48 f4       	brcc	.+18     	; 0x934 <__addsf3x+0x98>
 922:	87 95       	ror	r24
 924:	77 95       	ror	r23
 926:	67 95       	ror	r22
 928:	b7 95       	ror	r27
 92a:	f7 95       	ror	r31
 92c:	9e 3f       	cpi	r25, 0xFE	; 254
 92e:	08 f0       	brcs	.+2      	; 0x932 <__addsf3x+0x96>
 930:	b3 cf       	rjmp	.-154    	; 0x898 <__addsf3+0x1e>
 932:	93 95       	inc	r25
 934:	88 0f       	add	r24, r24
 936:	08 f0       	brcs	.+2      	; 0x93a <__addsf3x+0x9e>
 938:	99 27       	eor	r25, r25
 93a:	ee 0f       	add	r30, r30
 93c:	97 95       	ror	r25
 93e:	87 95       	ror	r24
 940:	08 95       	ret
 942:	8d d1       	rcall	.+794    	; 0xc5e <__fp_pscA>
 944:	58 f0       	brcs	.+22     	; 0x95c <__addsf3x+0xc0>
 946:	80 e8       	ldi	r24, 0x80	; 128
 948:	91 e0       	ldi	r25, 0x01	; 1
 94a:	09 f4       	brne	.+2      	; 0x94e <__addsf3x+0xb2>
 94c:	9e ef       	ldi	r25, 0xFE	; 254
 94e:	8e d1       	rcall	.+796    	; 0xc6c <__fp_pscB>
 950:	28 f0       	brcs	.+10     	; 0x95c <__addsf3x+0xc0>
 952:	40 e8       	ldi	r20, 0x80	; 128
 954:	51 e0       	ldi	r21, 0x01	; 1
 956:	59 f4       	brne	.+22     	; 0x96e <atan2+0xe>
 958:	5e ef       	ldi	r21, 0xFE	; 254
 95a:	09 c0       	rjmp	.+18     	; 0x96e <atan2+0xe>
 95c:	58 c1       	rjmp	.+688    	; 0xc0e <__fp_nan>
 95e:	c0 c1       	rjmp	.+896    	; 0xce0 <__fp_zero>

00000960 <atan2>:
 960:	e9 2f       	mov	r30, r25
 962:	e0 78       	andi	r30, 0x80	; 128
 964:	9b d1       	rcall	.+822    	; 0xc9c <__fp_split3>
 966:	68 f3       	brcs	.-38     	; 0x942 <__addsf3x+0xa6>
 968:	09 2e       	mov	r0, r25
 96a:	05 2a       	or	r0, r21
 96c:	c1 f3       	breq	.-16     	; 0x95e <__addsf3x+0xc2>
 96e:	26 17       	cp	r18, r22
 970:	37 07       	cpc	r19, r23
 972:	48 07       	cpc	r20, r24
 974:	59 07       	cpc	r21, r25
 976:	38 f0       	brcs	.+14     	; 0x986 <atan2+0x26>
 978:	0e 2e       	mov	r0, r30
 97a:	07 f8       	bld	r0, 7
 97c:	e0 25       	eor	r30, r0
 97e:	69 f0       	breq	.+26     	; 0x99a <atan2+0x3a>
 980:	e0 25       	eor	r30, r0
 982:	e0 64       	ori	r30, 0x40	; 64
 984:	0a c0       	rjmp	.+20     	; 0x99a <atan2+0x3a>
 986:	ef 63       	ori	r30, 0x3F	; 63
 988:	07 f8       	bld	r0, 7
 98a:	00 94       	com	r0
 98c:	07 fa       	bst	r0, 7
 98e:	db 01       	movw	r26, r22
 990:	b9 01       	movw	r22, r18
 992:	9d 01       	movw	r18, r26
 994:	dc 01       	movw	r26, r24
 996:	ca 01       	movw	r24, r20
 998:	ad 01       	movw	r20, r26
 99a:	ef 93       	push	r30
 99c:	47 d0       	rcall	.+142    	; 0xa2c <__divsf3_pse>
 99e:	6d d1       	rcall	.+730    	; 0xc7a <__fp_round>
 9a0:	0a d0       	rcall	.+20     	; 0x9b6 <atan>
 9a2:	5f 91       	pop	r21
 9a4:	55 23       	and	r21, r21
 9a6:	31 f0       	breq	.+12     	; 0x9b4 <atan2+0x54>
 9a8:	2b ed       	ldi	r18, 0xDB	; 219
 9aa:	3f e0       	ldi	r19, 0x0F	; 15
 9ac:	49 e4       	ldi	r20, 0x49	; 73
 9ae:	50 fd       	sbrc	r21, 0
 9b0:	49 ec       	ldi	r20, 0xC9	; 201
 9b2:	63 cf       	rjmp	.-314    	; 0x87a <__addsf3>
 9b4:	08 95       	ret

000009b6 <atan>:
 9b6:	df 93       	push	r29
 9b8:	dd 27       	eor	r29, r29
 9ba:	b9 2f       	mov	r27, r25
 9bc:	bf 77       	andi	r27, 0x7F	; 127
 9be:	40 e8       	ldi	r20, 0x80	; 128
 9c0:	5f e3       	ldi	r21, 0x3F	; 63
 9c2:	16 16       	cp	r1, r22
 9c4:	17 06       	cpc	r1, r23
 9c6:	48 07       	cpc	r20, r24
 9c8:	5b 07       	cpc	r21, r27
 9ca:	10 f4       	brcc	.+4      	; 0x9d0 <atan+0x1a>
 9cc:	d9 2f       	mov	r29, r25
 9ce:	8f d1       	rcall	.+798    	; 0xcee <inverse>
 9d0:	9f 93       	push	r25
 9d2:	8f 93       	push	r24
 9d4:	7f 93       	push	r23
 9d6:	6f 93       	push	r22
 9d8:	f4 d1       	rcall	.+1000   	; 0xdc2 <square>
 9da:	ec e8       	ldi	r30, 0x8C	; 140
 9dc:	f0 e0       	ldi	r31, 0x00	; 0
 9de:	1a d1       	rcall	.+564    	; 0xc14 <__fp_powser>
 9e0:	4c d1       	rcall	.+664    	; 0xc7a <__fp_round>
 9e2:	2f 91       	pop	r18
 9e4:	3f 91       	pop	r19
 9e6:	4f 91       	pop	r20
 9e8:	5f 91       	pop	r21
 9ea:	94 d1       	rcall	.+808    	; 0xd14 <__mulsf3x>
 9ec:	dd 23       	and	r29, r29
 9ee:	49 f0       	breq	.+18     	; 0xa02 <atan+0x4c>
 9f0:	90 58       	subi	r25, 0x80	; 128
 9f2:	a2 ea       	ldi	r26, 0xA2	; 162
 9f4:	2a ed       	ldi	r18, 0xDA	; 218
 9f6:	3f e0       	ldi	r19, 0x0F	; 15
 9f8:	49 ec       	ldi	r20, 0xC9	; 201
 9fa:	5f e3       	ldi	r21, 0x3F	; 63
 9fc:	d0 78       	andi	r29, 0x80	; 128
 9fe:	5d 27       	eor	r21, r29
 a00:	4d df       	rcall	.-358    	; 0x89c <__addsf3x>
 a02:	df 91       	pop	r29
 a04:	3a c1       	rjmp	.+628    	; 0xc7a <__fp_round>

00000a06 <__cmpsf2>:
 a06:	d9 d0       	rcall	.+434    	; 0xbba <__fp_cmp>
 a08:	08 f4       	brcc	.+2      	; 0xa0c <__cmpsf2+0x6>
 a0a:	81 e0       	ldi	r24, 0x01	; 1
 a0c:	08 95       	ret

00000a0e <__divsf3>:
 a0e:	0c d0       	rcall	.+24     	; 0xa28 <__divsf3x>
 a10:	34 c1       	rjmp	.+616    	; 0xc7a <__fp_round>
 a12:	2c d1       	rcall	.+600    	; 0xc6c <__fp_pscB>
 a14:	40 f0       	brcs	.+16     	; 0xa26 <__divsf3+0x18>
 a16:	23 d1       	rcall	.+582    	; 0xc5e <__fp_pscA>
 a18:	30 f0       	brcs	.+12     	; 0xa26 <__divsf3+0x18>
 a1a:	21 f4       	brne	.+8      	; 0xa24 <__divsf3+0x16>
 a1c:	5f 3f       	cpi	r21, 0xFF	; 255
 a1e:	19 f0       	breq	.+6      	; 0xa26 <__divsf3+0x18>
 a20:	f0 c0       	rjmp	.+480    	; 0xc02 <__fp_inf>
 a22:	51 11       	cpse	r21, r1
 a24:	5e c1       	rjmp	.+700    	; 0xce2 <__fp_szero>
 a26:	f3 c0       	rjmp	.+486    	; 0xc0e <__fp_nan>

00000a28 <__divsf3x>:
 a28:	39 d1       	rcall	.+626    	; 0xc9c <__fp_split3>
 a2a:	98 f3       	brcs	.-26     	; 0xa12 <__divsf3+0x4>

00000a2c <__divsf3_pse>:
 a2c:	99 23       	and	r25, r25
 a2e:	c9 f3       	breq	.-14     	; 0xa22 <__divsf3+0x14>
 a30:	55 23       	and	r21, r21
 a32:	b1 f3       	breq	.-20     	; 0xa20 <__divsf3+0x12>
 a34:	95 1b       	sub	r25, r21
 a36:	55 0b       	sbc	r21, r21
 a38:	bb 27       	eor	r27, r27
 a3a:	aa 27       	eor	r26, r26
 a3c:	62 17       	cp	r22, r18
 a3e:	73 07       	cpc	r23, r19
 a40:	84 07       	cpc	r24, r20
 a42:	38 f0       	brcs	.+14     	; 0xa52 <__divsf3_pse+0x26>
 a44:	9f 5f       	subi	r25, 0xFF	; 255
 a46:	5f 4f       	sbci	r21, 0xFF	; 255
 a48:	22 0f       	add	r18, r18
 a4a:	33 1f       	adc	r19, r19
 a4c:	44 1f       	adc	r20, r20
 a4e:	aa 1f       	adc	r26, r26
 a50:	a9 f3       	breq	.-22     	; 0xa3c <__divsf3_pse+0x10>
 a52:	33 d0       	rcall	.+102    	; 0xaba <__divsf3_pse+0x8e>
 a54:	0e 2e       	mov	r0, r30
 a56:	3a f0       	brmi	.+14     	; 0xa66 <__divsf3_pse+0x3a>
 a58:	e0 e8       	ldi	r30, 0x80	; 128
 a5a:	30 d0       	rcall	.+96     	; 0xabc <__divsf3_pse+0x90>
 a5c:	91 50       	subi	r25, 0x01	; 1
 a5e:	50 40       	sbci	r21, 0x00	; 0
 a60:	e6 95       	lsr	r30
 a62:	00 1c       	adc	r0, r0
 a64:	ca f7       	brpl	.-14     	; 0xa58 <__divsf3_pse+0x2c>
 a66:	29 d0       	rcall	.+82     	; 0xaba <__divsf3_pse+0x8e>
 a68:	fe 2f       	mov	r31, r30
 a6a:	27 d0       	rcall	.+78     	; 0xaba <__divsf3_pse+0x8e>
 a6c:	66 0f       	add	r22, r22
 a6e:	77 1f       	adc	r23, r23
 a70:	88 1f       	adc	r24, r24
 a72:	bb 1f       	adc	r27, r27
 a74:	26 17       	cp	r18, r22
 a76:	37 07       	cpc	r19, r23
 a78:	48 07       	cpc	r20, r24
 a7a:	ab 07       	cpc	r26, r27
 a7c:	b0 e8       	ldi	r27, 0x80	; 128
 a7e:	09 f0       	breq	.+2      	; 0xa82 <__divsf3_pse+0x56>
 a80:	bb 0b       	sbc	r27, r27
 a82:	80 2d       	mov	r24, r0
 a84:	bf 01       	movw	r22, r30
 a86:	ff 27       	eor	r31, r31
 a88:	93 58       	subi	r25, 0x83	; 131
 a8a:	5f 4f       	sbci	r21, 0xFF	; 255
 a8c:	2a f0       	brmi	.+10     	; 0xa98 <__divsf3_pse+0x6c>
 a8e:	9e 3f       	cpi	r25, 0xFE	; 254
 a90:	51 05       	cpc	r21, r1
 a92:	68 f0       	brcs	.+26     	; 0xaae <__divsf3_pse+0x82>
 a94:	b6 c0       	rjmp	.+364    	; 0xc02 <__fp_inf>
 a96:	25 c1       	rjmp	.+586    	; 0xce2 <__fp_szero>
 a98:	5f 3f       	cpi	r21, 0xFF	; 255
 a9a:	ec f3       	brlt	.-6      	; 0xa96 <__divsf3_pse+0x6a>
 a9c:	98 3e       	cpi	r25, 0xE8	; 232
 a9e:	dc f3       	brlt	.-10     	; 0xa96 <__divsf3_pse+0x6a>
 aa0:	86 95       	lsr	r24
 aa2:	77 95       	ror	r23
 aa4:	67 95       	ror	r22
 aa6:	b7 95       	ror	r27
 aa8:	f7 95       	ror	r31
 aaa:	9f 5f       	subi	r25, 0xFF	; 255
 aac:	c9 f7       	brne	.-14     	; 0xaa0 <__divsf3_pse+0x74>
 aae:	88 0f       	add	r24, r24
 ab0:	91 1d       	adc	r25, r1
 ab2:	96 95       	lsr	r25
 ab4:	87 95       	ror	r24
 ab6:	97 f9       	bld	r25, 7
 ab8:	08 95       	ret
 aba:	e1 e0       	ldi	r30, 0x01	; 1
 abc:	66 0f       	add	r22, r22
 abe:	77 1f       	adc	r23, r23
 ac0:	88 1f       	adc	r24, r24
 ac2:	bb 1f       	adc	r27, r27
 ac4:	62 17       	cp	r22, r18
 ac6:	73 07       	cpc	r23, r19
 ac8:	84 07       	cpc	r24, r20
 aca:	ba 07       	cpc	r27, r26
 acc:	20 f0       	brcs	.+8      	; 0xad6 <__divsf3_pse+0xaa>
 ace:	62 1b       	sub	r22, r18
 ad0:	73 0b       	sbc	r23, r19
 ad2:	84 0b       	sbc	r24, r20
 ad4:	ba 0b       	sbc	r27, r26
 ad6:	ee 1f       	adc	r30, r30
 ad8:	88 f7       	brcc	.-30     	; 0xabc <__divsf3_pse+0x90>
 ada:	e0 95       	com	r30
 adc:	08 95       	ret

00000ade <__fixsfsi>:
 ade:	04 d0       	rcall	.+8      	; 0xae8 <__fixunssfsi>
 ae0:	68 94       	set
 ae2:	b1 11       	cpse	r27, r1
 ae4:	fe c0       	rjmp	.+508    	; 0xce2 <__fp_szero>
 ae6:	08 95       	ret

00000ae8 <__fixunssfsi>:
 ae8:	e1 d0       	rcall	.+450    	; 0xcac <__fp_splitA>
 aea:	88 f0       	brcs	.+34     	; 0xb0e <__fixunssfsi+0x26>
 aec:	9f 57       	subi	r25, 0x7F	; 127
 aee:	90 f0       	brcs	.+36     	; 0xb14 <__fixunssfsi+0x2c>
 af0:	b9 2f       	mov	r27, r25
 af2:	99 27       	eor	r25, r25
 af4:	b7 51       	subi	r27, 0x17	; 23
 af6:	a0 f0       	brcs	.+40     	; 0xb20 <__fixunssfsi+0x38>
 af8:	d1 f0       	breq	.+52     	; 0xb2e <__fixunssfsi+0x46>
 afa:	66 0f       	add	r22, r22
 afc:	77 1f       	adc	r23, r23
 afe:	88 1f       	adc	r24, r24
 b00:	99 1f       	adc	r25, r25
 b02:	1a f0       	brmi	.+6      	; 0xb0a <__fixunssfsi+0x22>
 b04:	ba 95       	dec	r27
 b06:	c9 f7       	brne	.-14     	; 0xafa <__fixunssfsi+0x12>
 b08:	12 c0       	rjmp	.+36     	; 0xb2e <__fixunssfsi+0x46>
 b0a:	b1 30       	cpi	r27, 0x01	; 1
 b0c:	81 f0       	breq	.+32     	; 0xb2e <__fixunssfsi+0x46>
 b0e:	e8 d0       	rcall	.+464    	; 0xce0 <__fp_zero>
 b10:	b1 e0       	ldi	r27, 0x01	; 1
 b12:	08 95       	ret
 b14:	e5 c0       	rjmp	.+458    	; 0xce0 <__fp_zero>
 b16:	67 2f       	mov	r22, r23
 b18:	78 2f       	mov	r23, r24
 b1a:	88 27       	eor	r24, r24
 b1c:	b8 5f       	subi	r27, 0xF8	; 248
 b1e:	39 f0       	breq	.+14     	; 0xb2e <__fixunssfsi+0x46>
 b20:	b9 3f       	cpi	r27, 0xF9	; 249
 b22:	cc f3       	brlt	.-14     	; 0xb16 <__fixunssfsi+0x2e>
 b24:	86 95       	lsr	r24
 b26:	77 95       	ror	r23
 b28:	67 95       	ror	r22
 b2a:	b3 95       	inc	r27
 b2c:	d9 f7       	brne	.-10     	; 0xb24 <__fixunssfsi+0x3c>
 b2e:	3e f4       	brtc	.+14     	; 0xb3e <__fixunssfsi+0x56>
 b30:	90 95       	com	r25
 b32:	80 95       	com	r24
 b34:	70 95       	com	r23
 b36:	61 95       	neg	r22
 b38:	7f 4f       	sbci	r23, 0xFF	; 255
 b3a:	8f 4f       	sbci	r24, 0xFF	; 255
 b3c:	9f 4f       	sbci	r25, 0xFF	; 255
 b3e:	08 95       	ret

00000b40 <__floatunsisf>:
 b40:	e8 94       	clt
 b42:	09 c0       	rjmp	.+18     	; 0xb56 <__floatsisf+0x12>

00000b44 <__floatsisf>:
 b44:	97 fb       	bst	r25, 7
 b46:	3e f4       	brtc	.+14     	; 0xb56 <__floatsisf+0x12>
 b48:	90 95       	com	r25
 b4a:	80 95       	com	r24
 b4c:	70 95       	com	r23
 b4e:	61 95       	neg	r22
 b50:	7f 4f       	sbci	r23, 0xFF	; 255
 b52:	8f 4f       	sbci	r24, 0xFF	; 255
 b54:	9f 4f       	sbci	r25, 0xFF	; 255
 b56:	99 23       	and	r25, r25
 b58:	a9 f0       	breq	.+42     	; 0xb84 <__floatsisf+0x40>
 b5a:	f9 2f       	mov	r31, r25
 b5c:	96 e9       	ldi	r25, 0x96	; 150
 b5e:	bb 27       	eor	r27, r27
 b60:	93 95       	inc	r25
 b62:	f6 95       	lsr	r31
 b64:	87 95       	ror	r24
 b66:	77 95       	ror	r23
 b68:	67 95       	ror	r22
 b6a:	b7 95       	ror	r27
 b6c:	f1 11       	cpse	r31, r1
 b6e:	f8 cf       	rjmp	.-16     	; 0xb60 <__floatsisf+0x1c>
 b70:	fa f4       	brpl	.+62     	; 0xbb0 <__floatsisf+0x6c>
 b72:	bb 0f       	add	r27, r27
 b74:	11 f4       	brne	.+4      	; 0xb7a <__floatsisf+0x36>
 b76:	60 ff       	sbrs	r22, 0
 b78:	1b c0       	rjmp	.+54     	; 0xbb0 <__floatsisf+0x6c>
 b7a:	6f 5f       	subi	r22, 0xFF	; 255
 b7c:	7f 4f       	sbci	r23, 0xFF	; 255
 b7e:	8f 4f       	sbci	r24, 0xFF	; 255
 b80:	9f 4f       	sbci	r25, 0xFF	; 255
 b82:	16 c0       	rjmp	.+44     	; 0xbb0 <__floatsisf+0x6c>
 b84:	88 23       	and	r24, r24
 b86:	11 f0       	breq	.+4      	; 0xb8c <__floatsisf+0x48>
 b88:	96 e9       	ldi	r25, 0x96	; 150
 b8a:	11 c0       	rjmp	.+34     	; 0xbae <__floatsisf+0x6a>
 b8c:	77 23       	and	r23, r23
 b8e:	21 f0       	breq	.+8      	; 0xb98 <__floatsisf+0x54>
 b90:	9e e8       	ldi	r25, 0x8E	; 142
 b92:	87 2f       	mov	r24, r23
 b94:	76 2f       	mov	r23, r22
 b96:	05 c0       	rjmp	.+10     	; 0xba2 <__floatsisf+0x5e>
 b98:	66 23       	and	r22, r22
 b9a:	71 f0       	breq	.+28     	; 0xbb8 <__floatsisf+0x74>
 b9c:	96 e8       	ldi	r25, 0x86	; 134
 b9e:	86 2f       	mov	r24, r22
 ba0:	70 e0       	ldi	r23, 0x00	; 0
 ba2:	60 e0       	ldi	r22, 0x00	; 0
 ba4:	2a f0       	brmi	.+10     	; 0xbb0 <__floatsisf+0x6c>
 ba6:	9a 95       	dec	r25
 ba8:	66 0f       	add	r22, r22
 baa:	77 1f       	adc	r23, r23
 bac:	88 1f       	adc	r24, r24
 bae:	da f7       	brpl	.-10     	; 0xba6 <__floatsisf+0x62>
 bb0:	88 0f       	add	r24, r24
 bb2:	96 95       	lsr	r25
 bb4:	87 95       	ror	r24
 bb6:	97 f9       	bld	r25, 7
 bb8:	08 95       	ret

00000bba <__fp_cmp>:
 bba:	99 0f       	add	r25, r25
 bbc:	00 08       	sbc	r0, r0
 bbe:	55 0f       	add	r21, r21
 bc0:	aa 0b       	sbc	r26, r26
 bc2:	e0 e8       	ldi	r30, 0x80	; 128
 bc4:	fe ef       	ldi	r31, 0xFE	; 254
 bc6:	16 16       	cp	r1, r22
 bc8:	17 06       	cpc	r1, r23
 bca:	e8 07       	cpc	r30, r24
 bcc:	f9 07       	cpc	r31, r25
 bce:	c0 f0       	brcs	.+48     	; 0xc00 <__fp_cmp+0x46>
 bd0:	12 16       	cp	r1, r18
 bd2:	13 06       	cpc	r1, r19
 bd4:	e4 07       	cpc	r30, r20
 bd6:	f5 07       	cpc	r31, r21
 bd8:	98 f0       	brcs	.+38     	; 0xc00 <__fp_cmp+0x46>
 bda:	62 1b       	sub	r22, r18
 bdc:	73 0b       	sbc	r23, r19
 bde:	84 0b       	sbc	r24, r20
 be0:	95 0b       	sbc	r25, r21
 be2:	39 f4       	brne	.+14     	; 0xbf2 <__fp_cmp+0x38>
 be4:	0a 26       	eor	r0, r26
 be6:	61 f0       	breq	.+24     	; 0xc00 <__fp_cmp+0x46>
 be8:	23 2b       	or	r18, r19
 bea:	24 2b       	or	r18, r20
 bec:	25 2b       	or	r18, r21
 bee:	21 f4       	brne	.+8      	; 0xbf8 <__fp_cmp+0x3e>
 bf0:	08 95       	ret
 bf2:	0a 26       	eor	r0, r26
 bf4:	09 f4       	brne	.+2      	; 0xbf8 <__fp_cmp+0x3e>
 bf6:	a1 40       	sbci	r26, 0x01	; 1
 bf8:	a6 95       	lsr	r26
 bfa:	8f ef       	ldi	r24, 0xFF	; 255
 bfc:	81 1d       	adc	r24, r1
 bfe:	81 1d       	adc	r24, r1
 c00:	08 95       	ret

00000c02 <__fp_inf>:
 c02:	97 f9       	bld	r25, 7
 c04:	9f 67       	ori	r25, 0x7F	; 127
 c06:	80 e8       	ldi	r24, 0x80	; 128
 c08:	70 e0       	ldi	r23, 0x00	; 0
 c0a:	60 e0       	ldi	r22, 0x00	; 0
 c0c:	08 95       	ret

00000c0e <__fp_nan>:
 c0e:	9f ef       	ldi	r25, 0xFF	; 255
 c10:	80 ec       	ldi	r24, 0xC0	; 192
 c12:	08 95       	ret

00000c14 <__fp_powser>:
 c14:	df 93       	push	r29
 c16:	cf 93       	push	r28
 c18:	1f 93       	push	r17
 c1a:	0f 93       	push	r16
 c1c:	ff 92       	push	r15
 c1e:	ef 92       	push	r14
 c20:	df 92       	push	r13
 c22:	7b 01       	movw	r14, r22
 c24:	8c 01       	movw	r16, r24
 c26:	68 94       	set
 c28:	05 c0       	rjmp	.+10     	; 0xc34 <__fp_powser+0x20>
 c2a:	da 2e       	mov	r13, r26
 c2c:	ef 01       	movw	r28, r30
 c2e:	72 d0       	rcall	.+228    	; 0xd14 <__mulsf3x>
 c30:	fe 01       	movw	r30, r28
 c32:	e8 94       	clt
 c34:	a5 91       	lpm	r26, Z+
 c36:	25 91       	lpm	r18, Z+
 c38:	35 91       	lpm	r19, Z+
 c3a:	45 91       	lpm	r20, Z+
 c3c:	55 91       	lpm	r21, Z+
 c3e:	ae f3       	brts	.-22     	; 0xc2a <__fp_powser+0x16>
 c40:	ef 01       	movw	r28, r30
 c42:	2c de       	rcall	.-936    	; 0x89c <__addsf3x>
 c44:	fe 01       	movw	r30, r28
 c46:	97 01       	movw	r18, r14
 c48:	a8 01       	movw	r20, r16
 c4a:	da 94       	dec	r13
 c4c:	79 f7       	brne	.-34     	; 0xc2c <__fp_powser+0x18>
 c4e:	df 90       	pop	r13
 c50:	ef 90       	pop	r14
 c52:	ff 90       	pop	r15
 c54:	0f 91       	pop	r16
 c56:	1f 91       	pop	r17
 c58:	cf 91       	pop	r28
 c5a:	df 91       	pop	r29
 c5c:	08 95       	ret

00000c5e <__fp_pscA>:
 c5e:	00 24       	eor	r0, r0
 c60:	0a 94       	dec	r0
 c62:	16 16       	cp	r1, r22
 c64:	17 06       	cpc	r1, r23
 c66:	18 06       	cpc	r1, r24
 c68:	09 06       	cpc	r0, r25
 c6a:	08 95       	ret

00000c6c <__fp_pscB>:
 c6c:	00 24       	eor	r0, r0
 c6e:	0a 94       	dec	r0
 c70:	12 16       	cp	r1, r18
 c72:	13 06       	cpc	r1, r19
 c74:	14 06       	cpc	r1, r20
 c76:	05 06       	cpc	r0, r21
 c78:	08 95       	ret

00000c7a <__fp_round>:
 c7a:	09 2e       	mov	r0, r25
 c7c:	03 94       	inc	r0
 c7e:	00 0c       	add	r0, r0
 c80:	11 f4       	brne	.+4      	; 0xc86 <__fp_round+0xc>
 c82:	88 23       	and	r24, r24
 c84:	52 f0       	brmi	.+20     	; 0xc9a <__fp_round+0x20>
 c86:	bb 0f       	add	r27, r27
 c88:	40 f4       	brcc	.+16     	; 0xc9a <__fp_round+0x20>
 c8a:	bf 2b       	or	r27, r31
 c8c:	11 f4       	brne	.+4      	; 0xc92 <__fp_round+0x18>
 c8e:	60 ff       	sbrs	r22, 0
 c90:	04 c0       	rjmp	.+8      	; 0xc9a <__fp_round+0x20>
 c92:	6f 5f       	subi	r22, 0xFF	; 255
 c94:	7f 4f       	sbci	r23, 0xFF	; 255
 c96:	8f 4f       	sbci	r24, 0xFF	; 255
 c98:	9f 4f       	sbci	r25, 0xFF	; 255
 c9a:	08 95       	ret

00000c9c <__fp_split3>:
 c9c:	57 fd       	sbrc	r21, 7
 c9e:	90 58       	subi	r25, 0x80	; 128
 ca0:	44 0f       	add	r20, r20
 ca2:	55 1f       	adc	r21, r21
 ca4:	59 f0       	breq	.+22     	; 0xcbc <__fp_splitA+0x10>
 ca6:	5f 3f       	cpi	r21, 0xFF	; 255
 ca8:	71 f0       	breq	.+28     	; 0xcc6 <__fp_splitA+0x1a>
 caa:	47 95       	ror	r20

00000cac <__fp_splitA>:
 cac:	88 0f       	add	r24, r24
 cae:	97 fb       	bst	r25, 7
 cb0:	99 1f       	adc	r25, r25
 cb2:	61 f0       	breq	.+24     	; 0xccc <__fp_splitA+0x20>
 cb4:	9f 3f       	cpi	r25, 0xFF	; 255
 cb6:	79 f0       	breq	.+30     	; 0xcd6 <__fp_splitA+0x2a>
 cb8:	87 95       	ror	r24
 cba:	08 95       	ret
 cbc:	12 16       	cp	r1, r18
 cbe:	13 06       	cpc	r1, r19
 cc0:	14 06       	cpc	r1, r20
 cc2:	55 1f       	adc	r21, r21
 cc4:	f2 cf       	rjmp	.-28     	; 0xcaa <__fp_split3+0xe>
 cc6:	46 95       	lsr	r20
 cc8:	f1 df       	rcall	.-30     	; 0xcac <__fp_splitA>
 cca:	08 c0       	rjmp	.+16     	; 0xcdc <__fp_splitA+0x30>
 ccc:	16 16       	cp	r1, r22
 cce:	17 06       	cpc	r1, r23
 cd0:	18 06       	cpc	r1, r24
 cd2:	99 1f       	adc	r25, r25
 cd4:	f1 cf       	rjmp	.-30     	; 0xcb8 <__fp_splitA+0xc>
 cd6:	86 95       	lsr	r24
 cd8:	71 05       	cpc	r23, r1
 cda:	61 05       	cpc	r22, r1
 cdc:	08 94       	sec
 cde:	08 95       	ret

00000ce0 <__fp_zero>:
 ce0:	e8 94       	clt

00000ce2 <__fp_szero>:
 ce2:	bb 27       	eor	r27, r27
 ce4:	66 27       	eor	r22, r22
 ce6:	77 27       	eor	r23, r23
 ce8:	cb 01       	movw	r24, r22
 cea:	97 f9       	bld	r25, 7
 cec:	08 95       	ret

00000cee <inverse>:
 cee:	9b 01       	movw	r18, r22
 cf0:	ac 01       	movw	r20, r24
 cf2:	60 e0       	ldi	r22, 0x00	; 0
 cf4:	70 e0       	ldi	r23, 0x00	; 0
 cf6:	80 e8       	ldi	r24, 0x80	; 128
 cf8:	9f e3       	ldi	r25, 0x3F	; 63
 cfa:	89 ce       	rjmp	.-750    	; 0xa0e <__divsf3>

00000cfc <__mulsf3>:
 cfc:	0b d0       	rcall	.+22     	; 0xd14 <__mulsf3x>
 cfe:	bd cf       	rjmp	.-134    	; 0xc7a <__fp_round>
 d00:	ae df       	rcall	.-164    	; 0xc5e <__fp_pscA>
 d02:	28 f0       	brcs	.+10     	; 0xd0e <__mulsf3+0x12>
 d04:	b3 df       	rcall	.-154    	; 0xc6c <__fp_pscB>
 d06:	18 f0       	brcs	.+6      	; 0xd0e <__mulsf3+0x12>
 d08:	95 23       	and	r25, r21
 d0a:	09 f0       	breq	.+2      	; 0xd0e <__mulsf3+0x12>
 d0c:	7a cf       	rjmp	.-268    	; 0xc02 <__fp_inf>
 d0e:	7f cf       	rjmp	.-258    	; 0xc0e <__fp_nan>
 d10:	11 24       	eor	r1, r1
 d12:	e7 cf       	rjmp	.-50     	; 0xce2 <__fp_szero>

00000d14 <__mulsf3x>:
 d14:	c3 df       	rcall	.-122    	; 0xc9c <__fp_split3>
 d16:	a0 f3       	brcs	.-24     	; 0xd00 <__mulsf3+0x4>

00000d18 <__mulsf3_pse>:
 d18:	95 9f       	mul	r25, r21
 d1a:	d1 f3       	breq	.-12     	; 0xd10 <__mulsf3+0x14>
 d1c:	95 0f       	add	r25, r21
 d1e:	50 e0       	ldi	r21, 0x00	; 0
 d20:	55 1f       	adc	r21, r21
 d22:	62 9f       	mul	r22, r18
 d24:	f0 01       	movw	r30, r0
 d26:	72 9f       	mul	r23, r18
 d28:	bb 27       	eor	r27, r27
 d2a:	f0 0d       	add	r31, r0
 d2c:	b1 1d       	adc	r27, r1
 d2e:	63 9f       	mul	r22, r19
 d30:	aa 27       	eor	r26, r26
 d32:	f0 0d       	add	r31, r0
 d34:	b1 1d       	adc	r27, r1
 d36:	aa 1f       	adc	r26, r26
 d38:	64 9f       	mul	r22, r20
 d3a:	66 27       	eor	r22, r22
 d3c:	b0 0d       	add	r27, r0
 d3e:	a1 1d       	adc	r26, r1
 d40:	66 1f       	adc	r22, r22
 d42:	82 9f       	mul	r24, r18
 d44:	22 27       	eor	r18, r18
 d46:	b0 0d       	add	r27, r0
 d48:	a1 1d       	adc	r26, r1
 d4a:	62 1f       	adc	r22, r18
 d4c:	73 9f       	mul	r23, r19
 d4e:	b0 0d       	add	r27, r0
 d50:	a1 1d       	adc	r26, r1
 d52:	62 1f       	adc	r22, r18
 d54:	83 9f       	mul	r24, r19
 d56:	a0 0d       	add	r26, r0
 d58:	61 1d       	adc	r22, r1
 d5a:	22 1f       	adc	r18, r18
 d5c:	74 9f       	mul	r23, r20
 d5e:	33 27       	eor	r19, r19
 d60:	a0 0d       	add	r26, r0
 d62:	61 1d       	adc	r22, r1
 d64:	23 1f       	adc	r18, r19
 d66:	84 9f       	mul	r24, r20
 d68:	60 0d       	add	r22, r0
 d6a:	21 1d       	adc	r18, r1
 d6c:	82 2f       	mov	r24, r18
 d6e:	76 2f       	mov	r23, r22
 d70:	6a 2f       	mov	r22, r26
 d72:	11 24       	eor	r1, r1
 d74:	9f 57       	subi	r25, 0x7F	; 127
 d76:	50 40       	sbci	r21, 0x00	; 0
 d78:	8a f0       	brmi	.+34     	; 0xd9c <__mulsf3_pse+0x84>
 d7a:	e1 f0       	breq	.+56     	; 0xdb4 <__mulsf3_pse+0x9c>
 d7c:	88 23       	and	r24, r24
 d7e:	4a f0       	brmi	.+18     	; 0xd92 <__mulsf3_pse+0x7a>
 d80:	ee 0f       	add	r30, r30
 d82:	ff 1f       	adc	r31, r31
 d84:	bb 1f       	adc	r27, r27
 d86:	66 1f       	adc	r22, r22
 d88:	77 1f       	adc	r23, r23
 d8a:	88 1f       	adc	r24, r24
 d8c:	91 50       	subi	r25, 0x01	; 1
 d8e:	50 40       	sbci	r21, 0x00	; 0
 d90:	a9 f7       	brne	.-22     	; 0xd7c <__mulsf3_pse+0x64>
 d92:	9e 3f       	cpi	r25, 0xFE	; 254
 d94:	51 05       	cpc	r21, r1
 d96:	70 f0       	brcs	.+28     	; 0xdb4 <__mulsf3_pse+0x9c>
 d98:	34 cf       	rjmp	.-408    	; 0xc02 <__fp_inf>
 d9a:	a3 cf       	rjmp	.-186    	; 0xce2 <__fp_szero>
 d9c:	5f 3f       	cpi	r21, 0xFF	; 255
 d9e:	ec f3       	brlt	.-6      	; 0xd9a <__mulsf3_pse+0x82>
 da0:	98 3e       	cpi	r25, 0xE8	; 232
 da2:	dc f3       	brlt	.-10     	; 0xd9a <__mulsf3_pse+0x82>
 da4:	86 95       	lsr	r24
 da6:	77 95       	ror	r23
 da8:	67 95       	ror	r22
 daa:	b7 95       	ror	r27
 dac:	f7 95       	ror	r31
 dae:	e7 95       	ror	r30
 db0:	9f 5f       	subi	r25, 0xFF	; 255
 db2:	c1 f7       	brne	.-16     	; 0xda4 <__mulsf3_pse+0x8c>
 db4:	fe 2b       	or	r31, r30
 db6:	88 0f       	add	r24, r24
 db8:	91 1d       	adc	r25, r1
 dba:	96 95       	lsr	r25
 dbc:	87 95       	ror	r24
 dbe:	97 f9       	bld	r25, 7
 dc0:	08 95       	ret

00000dc2 <square>:
 dc2:	9b 01       	movw	r18, r22
 dc4:	ac 01       	movw	r20, r24
 dc6:	9a cf       	rjmp	.-204    	; 0xcfc <__mulsf3>

00000dc8 <__adddi3_s8>:
 dc8:	00 24       	eor	r0, r0
 dca:	a7 fd       	sbrc	r26, 7
 dcc:	00 94       	com	r0
 dce:	2a 0f       	add	r18, r26
 dd0:	30 1d       	adc	r19, r0
 dd2:	40 1d       	adc	r20, r0
 dd4:	50 1d       	adc	r21, r0
 dd6:	60 1d       	adc	r22, r0
 dd8:	70 1d       	adc	r23, r0
 dda:	80 1d       	adc	r24, r0
 ddc:	90 1d       	adc	r25, r0
 dde:	08 95       	ret

00000de0 <__cmpdi2>:
 de0:	2a 15       	cp	r18, r10
 de2:	3b 05       	cpc	r19, r11
 de4:	4c 05       	cpc	r20, r12
 de6:	5d 05       	cpc	r21, r13
 de8:	6e 05       	cpc	r22, r14
 dea:	7f 05       	cpc	r23, r15
 dec:	80 07       	cpc	r24, r16
 dee:	91 07       	cpc	r25, r17
 df0:	08 95       	ret

00000df2 <atoi>:
 df2:	fc 01       	movw	r30, r24
 df4:	88 27       	eor	r24, r24
 df6:	99 27       	eor	r25, r25
 df8:	e8 94       	clt
 dfa:	21 91       	ld	r18, Z+
 dfc:	20 32       	cpi	r18, 0x20	; 32
 dfe:	e9 f3       	breq	.-6      	; 0xdfa <atoi+0x8>
 e00:	29 30       	cpi	r18, 0x09	; 9
 e02:	10 f0       	brcs	.+4      	; 0xe08 <atoi+0x16>
 e04:	2e 30       	cpi	r18, 0x0E	; 14
 e06:	c8 f3       	brcs	.-14     	; 0xdfa <atoi+0x8>
 e08:	2b 32       	cpi	r18, 0x2B	; 43
 e0a:	39 f0       	breq	.+14     	; 0xe1a <atoi+0x28>
 e0c:	2d 32       	cpi	r18, 0x2D	; 45
 e0e:	31 f4       	brne	.+12     	; 0xe1c <atoi+0x2a>
 e10:	68 94       	set
 e12:	03 c0       	rjmp	.+6      	; 0xe1a <atoi+0x28>
 e14:	15 d0       	rcall	.+42     	; 0xe40 <__mulhi_const_10>
 e16:	82 0f       	add	r24, r18
 e18:	91 1d       	adc	r25, r1
 e1a:	21 91       	ld	r18, Z+
 e1c:	20 53       	subi	r18, 0x30	; 48
 e1e:	2a 30       	cpi	r18, 0x0A	; 10
 e20:	c8 f3       	brcs	.-14     	; 0xe14 <atoi+0x22>
 e22:	1e f4       	brtc	.+6      	; 0xe2a <atoi+0x38>
 e24:	90 95       	com	r25
 e26:	81 95       	neg	r24
 e28:	9f 4f       	sbci	r25, 0xFF	; 255
 e2a:	08 95       	ret

00000e2c <__itoa_ncheck>:
 e2c:	bb 27       	eor	r27, r27
 e2e:	4a 30       	cpi	r20, 0x0A	; 10
 e30:	31 f4       	brne	.+12     	; 0xe3e <__itoa_ncheck+0x12>
 e32:	99 23       	and	r25, r25
 e34:	22 f4       	brpl	.+8      	; 0xe3e <__itoa_ncheck+0x12>
 e36:	bd e2       	ldi	r27, 0x2D	; 45
 e38:	90 95       	com	r25
 e3a:	81 95       	neg	r24
 e3c:	9f 4f       	sbci	r25, 0xFF	; 255
 e3e:	09 c0       	rjmp	.+18     	; 0xe52 <__utoa_common>

00000e40 <__mulhi_const_10>:
 e40:	7a e0       	ldi	r23, 0x0A	; 10
 e42:	97 9f       	mul	r25, r23
 e44:	90 2d       	mov	r25, r0
 e46:	87 9f       	mul	r24, r23
 e48:	80 2d       	mov	r24, r0
 e4a:	91 0d       	add	r25, r1
 e4c:	11 24       	eor	r1, r1
 e4e:	08 95       	ret

00000e50 <__utoa_ncheck>:
 e50:	bb 27       	eor	r27, r27

00000e52 <__utoa_common>:
 e52:	fb 01       	movw	r30, r22
 e54:	55 27       	eor	r21, r21
 e56:	aa 27       	eor	r26, r26
 e58:	88 0f       	add	r24, r24
 e5a:	99 1f       	adc	r25, r25
 e5c:	aa 1f       	adc	r26, r26
 e5e:	a4 17       	cp	r26, r20
 e60:	10 f0       	brcs	.+4      	; 0xe66 <__utoa_common+0x14>
 e62:	a4 1b       	sub	r26, r20
 e64:	83 95       	inc	r24
 e66:	50 51       	subi	r21, 0x10	; 16
 e68:	b9 f7       	brne	.-18     	; 0xe58 <__utoa_common+0x6>
 e6a:	a0 5d       	subi	r26, 0xD0	; 208
 e6c:	aa 33       	cpi	r26, 0x3A	; 58
 e6e:	08 f0       	brcs	.+2      	; 0xe72 <__utoa_common+0x20>
 e70:	a9 5d       	subi	r26, 0xD9	; 217
 e72:	a1 93       	st	Z+, r26
 e74:	00 97       	sbiw	r24, 0x00	; 0
 e76:	79 f7       	brne	.-34     	; 0xe56 <__utoa_common+0x4>
 e78:	b1 11       	cpse	r27, r1
 e7a:	b1 93       	st	Z+, r27
 e7c:	11 92       	st	Z+, r1
 e7e:	cb 01       	movw	r24, r22
 e80:	00 c0       	rjmp	.+0      	; 0xe82 <strrev>

00000e82 <strrev>:
 e82:	dc 01       	movw	r26, r24
 e84:	fc 01       	movw	r30, r24
 e86:	67 2f       	mov	r22, r23
 e88:	71 91       	ld	r23, Z+
 e8a:	77 23       	and	r23, r23
 e8c:	e1 f7       	brne	.-8      	; 0xe86 <strrev+0x4>
 e8e:	32 97       	sbiw	r30, 0x02	; 2
 e90:	04 c0       	rjmp	.+8      	; 0xe9a <strrev+0x18>
 e92:	7c 91       	ld	r23, X
 e94:	6d 93       	st	X+, r22
 e96:	70 83       	st	Z, r23
 e98:	62 91       	ld	r22, -Z
 e9a:	ae 17       	cp	r26, r30
 e9c:	bf 07       	cpc	r27, r31
 e9e:	c8 f3       	brcs	.-14     	; 0xe92 <strrev+0x10>
 ea0:	08 95       	ret

00000ea2 <_exit>:
 ea2:	f8 94       	cli

00000ea4 <__stop_program>:
 ea4:	ff cf       	rjmp	.-2      	; 0xea4 <__stop_program>
